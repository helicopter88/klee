// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Cache.proto

#include "klee/util/Cache.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace klee {
class ProtoArrayDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProtoArray>
      _instance;
} _ProtoArray_default_instance_;
class ProtoBitVectorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProtoBitVector>
      _instance;
} _ProtoBitVector_default_instance_;
class ProtoBindingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProtoBinding>
      _instance;
} _ProtoBinding_default_instance_;
class ProtoAssignmentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProtoAssignment>
      _instance;
} _ProtoAssignment_default_instance_;
class ProtoConstExprDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProtoConstExpr>
      _instance;
} _ProtoConstExpr_default_instance_;
class ProtoUpdateNodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProtoUpdateNode>
      _instance;
} _ProtoUpdateNode_default_instance_;
class ProtoReadExprDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProtoReadExpr>
      _instance;
} _ProtoReadExpr_default_instance_;
class ProtoExtractExprDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProtoExtractExpr>
      _instance;
} _ProtoExtractExpr_default_instance_;
class ProtoExprDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProtoExpr>
      _instance;
  const ::klee::ProtoConstExpr* constdata_;
  const ::klee::ProtoReadExpr* readdata_;
  const ::klee::ProtoExtractExpr* extractdata_;
} _ProtoExpr_default_instance_;
class ProtoCacheElemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProtoCacheElem>
      _instance;
} _ProtoCacheElem_default_instance_;
class ProtoCacheDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProtoCache>
      _instance;
} _ProtoCache_default_instance_;
}  // namespace klee
namespace protobuf_Cache_2eproto {
void InitDefaultsProtoArrayImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Cache_2eproto::InitDefaultsProtoConstExpr();
  protobuf_Cache_2eproto::InitDefaultsProtoExtractExpr();
  {
    void* ptr = &::klee::_ProtoArray_default_instance_;
    new (ptr) ::klee::ProtoArray();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::klee::_ProtoUpdateNode_default_instance_;
    new (ptr) ::klee::ProtoUpdateNode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::klee::_ProtoReadExpr_default_instance_;
    new (ptr) ::klee::ProtoReadExpr();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::klee::_ProtoExpr_default_instance_;
    new (ptr) ::klee::ProtoExpr();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::klee::ProtoArray::InitAsDefaultInstance();
  ::klee::ProtoUpdateNode::InitAsDefaultInstance();
  ::klee::ProtoReadExpr::InitAsDefaultInstance();
  ::klee::ProtoExpr::InitAsDefaultInstance();
}

void InitDefaultsProtoArray() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsProtoArrayImpl);
}

void InitDefaultsProtoBitVectorImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::klee::_ProtoBitVector_default_instance_;
    new (ptr) ::klee::ProtoBitVector();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::klee::ProtoBitVector::InitAsDefaultInstance();
}

void InitDefaultsProtoBitVector() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsProtoBitVectorImpl);
}

void InitDefaultsProtoBindingImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Cache_2eproto::InitDefaultsProtoArray();
  protobuf_Cache_2eproto::InitDefaultsProtoBitVector();
  {
    void* ptr = &::klee::_ProtoBinding_default_instance_;
    new (ptr) ::klee::ProtoBinding();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::klee::ProtoBinding::InitAsDefaultInstance();
}

void InitDefaultsProtoBinding() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsProtoBindingImpl);
}

void InitDefaultsProtoAssignmentImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Cache_2eproto::InitDefaultsProtoBinding();
  {
    void* ptr = &::klee::_ProtoAssignment_default_instance_;
    new (ptr) ::klee::ProtoAssignment();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::klee::ProtoAssignment::InitAsDefaultInstance();
}

void InitDefaultsProtoAssignment() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsProtoAssignmentImpl);
}

void InitDefaultsProtoConstExprImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::klee::_ProtoConstExpr_default_instance_;
    new (ptr) ::klee::ProtoConstExpr();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::klee::ProtoConstExpr::InitAsDefaultInstance();
}

void InitDefaultsProtoConstExpr() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsProtoConstExprImpl);
}

void InitDefaultsProtoExtractExprImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::klee::_ProtoExtractExpr_default_instance_;
    new (ptr) ::klee::ProtoExtractExpr();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::klee::ProtoExtractExpr::InitAsDefaultInstance();
}

void InitDefaultsProtoExtractExpr() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsProtoExtractExprImpl);
}

void InitDefaultsProtoCacheElemImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Cache_2eproto::InitDefaultsProtoArray();
  protobuf_Cache_2eproto::InitDefaultsProtoAssignment();
  {
    void* ptr = &::klee::_ProtoCacheElem_default_instance_;
    new (ptr) ::klee::ProtoCacheElem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::klee::ProtoCacheElem::InitAsDefaultInstance();
}

void InitDefaultsProtoCacheElem() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsProtoCacheElemImpl);
}

void InitDefaultsProtoCacheImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Cache_2eproto::InitDefaultsProtoCacheElem();
  {
    void* ptr = &::klee::_ProtoCache_default_instance_;
    new (ptr) ::klee::ProtoCache();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::klee::ProtoCache::InitAsDefaultInstance();
}

void InitDefaultsProtoCache() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsProtoCacheImpl);
}

::google::protobuf::Metadata file_level_metadata[11];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::klee::ProtoArray, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::klee::ProtoArray, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::klee::ProtoArray, size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::klee::ProtoArray, domain_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::klee::ProtoArray, range_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::klee::ProtoArray, hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::klee::ProtoArray, constantvalues_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::klee::ProtoBitVector, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::klee::ProtoBitVector, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::klee::ProtoBinding, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::klee::ProtoBinding, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::klee::ProtoBinding, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::klee::ProtoAssignment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::klee::ProtoAssignment, allowfreevalues_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::klee::ProtoAssignment, binding_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::klee::ProtoConstExpr, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::klee::ProtoConstExpr, constexprbwidth_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::klee::ProtoConstExpr, constexprval_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::klee::ProtoUpdateNode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::klee::ProtoUpdateNode, updateindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::klee::ProtoUpdateNode, updatevalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::klee::ProtoReadExpr, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::klee::ProtoReadExpr, updatelist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::klee::ProtoReadExpr, root_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::klee::ProtoExtractExpr, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::klee::ProtoExtractExpr, extractbitoff_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::klee::ProtoExtractExpr, extractwidth_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::klee::ProtoExpr, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::klee::ProtoExpr, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::klee::ProtoExpr, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::klee::ProtoExpr, kind_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::klee::ProtoExpr, refcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::klee::ProtoExpr, hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::klee::ProtoExpr, numkids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::klee::ProtoExpr, kids_),
  offsetof(::klee::ProtoExprDefaultTypeInternal, constdata_),
  offsetof(::klee::ProtoExprDefaultTypeInternal, readdata_),
  offsetof(::klee::ProtoExprDefaultTypeInternal, extractdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::klee::ProtoExpr, specialData_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::klee::ProtoCacheElem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::klee::ProtoCacheElem, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::klee::ProtoCacheElem, assignment_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::klee::ProtoCache, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::klee::ProtoCache, elem_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::klee::ProtoArray)},
  { 11, -1, sizeof(::klee::ProtoBitVector)},
  { 17, -1, sizeof(::klee::ProtoBinding)},
  { 24, -1, sizeof(::klee::ProtoAssignment)},
  { 31, -1, sizeof(::klee::ProtoConstExpr)},
  { 38, -1, sizeof(::klee::ProtoUpdateNode)},
  { 45, -1, sizeof(::klee::ProtoReadExpr)},
  { 52, -1, sizeof(::klee::ProtoExtractExpr)},
  { 59, -1, sizeof(::klee::ProtoExpr)},
  { 74, -1, sizeof(::klee::ProtoCacheElem)},
  { 81, -1, sizeof(::klee::ProtoCache)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::klee::_ProtoArray_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::klee::_ProtoBitVector_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::klee::_ProtoBinding_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::klee::_ProtoAssignment_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::klee::_ProtoConstExpr_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::klee::_ProtoUpdateNode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::klee::_ProtoReadExpr_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::klee::_ProtoExtractExpr_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::klee::_ProtoExpr_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::klee::_ProtoCacheElem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::klee::_ProtoCache_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "Cache.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 11);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\013Cache.proto\022\004klee\"~\n\nProtoArray\022\014\n\004nam"
      "e\030\001 \001(\t\022\014\n\004size\030\002 \001(\004\022\016\n\006domain\030\003 \001(\r\022\r\n"
      "\005range\030\004 \001(\r\022\014\n\004hash\030\005 \001(\r\022\'\n\016constantVa"
      "lues\030\006 \003(\0132\017.klee.ProtoExpr\"\037\n\016ProtoBitV"
      "ector\022\r\n\005value\030\001 \003(\r\"R\n\014ProtoBinding\022\035\n\003"
      "key\030\001 \001(\0132\020.klee.ProtoArray\022#\n\005value\030\002 \001"
      "(\0132\024.klee.ProtoBitVector\"O\n\017ProtoAssignm"
      "ent\022\027\n\017allowFreeValues\030\001 \001(\010\022#\n\007binding\030"
      "\002 \003(\0132\022.klee.ProtoBinding\"\?\n\016ProtoConstE"
      "xpr\022\027\n\017constExprBWidth\030\001 \001(\r\022\024\n\014constExp"
      "rVal\030\002 \001(\004\"]\n\017ProtoUpdateNode\022$\n\013updateI"
      "ndex\030\001 \001(\0132\017.klee.ProtoExpr\022$\n\013updateVal"
      "ue\030\002 \001(\0132\017.klee.ProtoExpr\"Z\n\rProtoReadEx"
      "pr\022)\n\nupdateList\030\001 \003(\0132\025.klee.ProtoUpdat"
      "eNode\022\036\n\004root\030\002 \001(\0132\020.klee.ProtoArray\"\?\n"
      "\020ProtoExtractExpr\022\025\n\rextractBitOff\030\001 \001(\r"
      "\022\024\n\014extractWidth\030\002 \001(\r\"\212\002\n\tProtoExpr\022\r\n\005"
      "width\030\001 \001(\r\022\014\n\004kind\030\002 \001(\r\022\020\n\010refCount\030\003 "
      "\001(\r\022\014\n\004hash\030\004 \001(\r\022\017\n\007numKids\030\005 \001(\r\022\035\n\004ki"
      "ds\030\006 \003(\0132\017.klee.ProtoExpr\022)\n\tconstData\030\007"
      " \001(\0132\024.klee.ProtoConstExprH\000\022\'\n\010readData"
      "\030\010 \001(\0132\023.klee.ProtoReadExprH\000\022-\n\013extract"
      "Data\030\t \001(\0132\026.klee.ProtoExtractExprH\000B\r\n\013"
      "specialData\"Y\n\016ProtoCacheElem\022\034\n\003key\030\001 \003"
      "(\0132\017.klee.ProtoExpr\022)\n\nassignment\030\002 \001(\0132"
      "\025.klee.ProtoAssignment\"0\n\nProtoCache\022\"\n\004"
      "elem\030\001 \003(\0132\024.klee.ProtoCacheElemb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1080);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Cache.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Cache_2eproto
namespace klee {

// ===================================================================

void ProtoArray::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProtoArray::kNameFieldNumber;
const int ProtoArray::kSizeFieldNumber;
const int ProtoArray::kDomainFieldNumber;
const int ProtoArray::kRangeFieldNumber;
const int ProtoArray::kHashFieldNumber;
const int ProtoArray::kConstantValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProtoArray::ProtoArray()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Cache_2eproto::InitDefaultsProtoArray();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:klee.ProtoArray)
}
ProtoArray::ProtoArray(const ProtoArray& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      constantvalues_(from.constantvalues_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&size_, &from.size_,
    static_cast<size_t>(reinterpret_cast<char*>(&hash_) -
    reinterpret_cast<char*>(&size_)) + sizeof(hash_));
  // @@protoc_insertion_point(copy_constructor:klee.ProtoArray)
}

void ProtoArray::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hash_) -
      reinterpret_cast<char*>(&size_)) + sizeof(hash_));
  _cached_size_ = 0;
}

ProtoArray::~ProtoArray() {
  // @@protoc_insertion_point(destructor:klee.ProtoArray)
  SharedDtor();
}

void ProtoArray::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ProtoArray::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoArray::descriptor() {
  ::protobuf_Cache_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cache_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProtoArray& ProtoArray::default_instance() {
  ::protobuf_Cache_2eproto::InitDefaultsProtoArray();
  return *internal_default_instance();
}

ProtoArray* ProtoArray::New(::google::protobuf::Arena* arena) const {
  ProtoArray* n = new ProtoArray;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProtoArray::Clear() {
// @@protoc_insertion_point(message_clear_start:klee.ProtoArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  constantvalues_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hash_) -
      reinterpret_cast<char*>(&size_)) + sizeof(hash_));
  _internal_metadata_.Clear();
}

bool ProtoArray::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:klee.ProtoArray)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "klee.ProtoArray.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 domain = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &domain_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 range = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &range_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 hash = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hash_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .klee.ProtoExpr constantValues = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_constantvalues()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:klee.ProtoArray)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:klee.ProtoArray)
  return false;
#undef DO_
}

void ProtoArray::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:klee.ProtoArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "klee.ProtoArray.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // uint64 size = 2;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->size(), output);
  }

  // uint32 domain = 3;
  if (this->domain() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->domain(), output);
  }

  // uint32 range = 4;
  if (this->range() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->range(), output);
  }

  // uint32 hash = 5;
  if (this->hash() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->hash(), output);
  }

  // repeated .klee.ProtoExpr constantValues = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->constantvalues_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->constantvalues(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:klee.ProtoArray)
}

::google::protobuf::uint8* ProtoArray::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:klee.ProtoArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "klee.ProtoArray.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // uint64 size = 2;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->size(), target);
  }

  // uint32 domain = 3;
  if (this->domain() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->domain(), target);
  }

  // uint32 range = 4;
  if (this->range() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->range(), target);
  }

  // uint32 hash = 5;
  if (this->hash() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->hash(), target);
  }

  // repeated .klee.ProtoExpr constantValues = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->constantvalues_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->constantvalues(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:klee.ProtoArray)
  return target;
}

size_t ProtoArray::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:klee.ProtoArray)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .klee.ProtoExpr constantValues = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->constantvalues_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->constantvalues(static_cast<int>(i)));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // uint64 size = 2;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->size());
  }

  // uint32 domain = 3;
  if (this->domain() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->domain());
  }

  // uint32 range = 4;
  if (this->range() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->range());
  }

  // uint32 hash = 5;
  if (this->hash() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hash());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoArray::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:klee.ProtoArray)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoArray* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProtoArray>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:klee.ProtoArray)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:klee.ProtoArray)
    MergeFrom(*source);
  }
}

void ProtoArray::MergeFrom(const ProtoArray& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:klee.ProtoArray)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  constantvalues_.MergeFrom(from.constantvalues_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
  if (from.domain() != 0) {
    set_domain(from.domain());
  }
  if (from.range() != 0) {
    set_range(from.range());
  }
  if (from.hash() != 0) {
    set_hash(from.hash());
  }
}

void ProtoArray::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:klee.ProtoArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoArray::CopyFrom(const ProtoArray& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:klee.ProtoArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoArray::IsInitialized() const {
  return true;
}

void ProtoArray::Swap(ProtoArray* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProtoArray::InternalSwap(ProtoArray* other) {
  using std::swap;
  constantvalues_.InternalSwap(&other->constantvalues_);
  name_.Swap(&other->name_);
  swap(size_, other->size_);
  swap(domain_, other->domain_);
  swap(range_, other->range_);
  swap(hash_, other->hash_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProtoArray::GetMetadata() const {
  protobuf_Cache_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cache_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProtoBitVector::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProtoBitVector::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProtoBitVector::ProtoBitVector()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Cache_2eproto::InitDefaultsProtoBitVector();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:klee.ProtoBitVector)
}
ProtoBitVector::ProtoBitVector(const ProtoBitVector& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      value_(from.value_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:klee.ProtoBitVector)
}

void ProtoBitVector::SharedCtor() {
  _cached_size_ = 0;
}

ProtoBitVector::~ProtoBitVector() {
  // @@protoc_insertion_point(destructor:klee.ProtoBitVector)
  SharedDtor();
}

void ProtoBitVector::SharedDtor() {
}

void ProtoBitVector::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoBitVector::descriptor() {
  ::protobuf_Cache_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cache_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProtoBitVector& ProtoBitVector::default_instance() {
  ::protobuf_Cache_2eproto::InitDefaultsProtoBitVector();
  return *internal_default_instance();
}

ProtoBitVector* ProtoBitVector::New(::google::protobuf::Arena* arena) const {
  ProtoBitVector* n = new ProtoBitVector;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProtoBitVector::Clear() {
// @@protoc_insertion_point(message_clear_start:klee.ProtoBitVector)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.Clear();
  _internal_metadata_.Clear();
}

bool ProtoBitVector::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:klee.ProtoBitVector)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_value())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_value())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:klee.ProtoBitVector)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:klee.ProtoBitVector)
  return false;
#undef DO_
}

void ProtoBitVector::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:klee.ProtoBitVector)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 value = 1;
  if (this->value_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _value_cached_byte_size_));
  }
  for (int i = 0, n = this->value_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->value(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:klee.ProtoBitVector)
}

::google::protobuf::uint8* ProtoBitVector::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:klee.ProtoBitVector)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 value = 1;
  if (this->value_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _value_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->value_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:klee.ProtoBitVector)
  return target;
}

size_t ProtoBitVector::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:klee.ProtoBitVector)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 value = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->value_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _value_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoBitVector::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:klee.ProtoBitVector)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoBitVector* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProtoBitVector>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:klee.ProtoBitVector)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:klee.ProtoBitVector)
    MergeFrom(*source);
  }
}

void ProtoBitVector::MergeFrom(const ProtoBitVector& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:klee.ProtoBitVector)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  value_.MergeFrom(from.value_);
}

void ProtoBitVector::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:klee.ProtoBitVector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoBitVector::CopyFrom(const ProtoBitVector& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:klee.ProtoBitVector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoBitVector::IsInitialized() const {
  return true;
}

void ProtoBitVector::Swap(ProtoBitVector* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProtoBitVector::InternalSwap(ProtoBitVector* other) {
  using std::swap;
  value_.InternalSwap(&other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProtoBitVector::GetMetadata() const {
  protobuf_Cache_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cache_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProtoBinding::InitAsDefaultInstance() {
  ::klee::_ProtoBinding_default_instance_._instance.get_mutable()->key_ = const_cast< ::klee::ProtoArray*>(
      ::klee::ProtoArray::internal_default_instance());
  ::klee::_ProtoBinding_default_instance_._instance.get_mutable()->value_ = const_cast< ::klee::ProtoBitVector*>(
      ::klee::ProtoBitVector::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProtoBinding::kKeyFieldNumber;
const int ProtoBinding::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProtoBinding::ProtoBinding()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Cache_2eproto::InitDefaultsProtoBinding();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:klee.ProtoBinding)
}
ProtoBinding::ProtoBinding(const ProtoBinding& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_key()) {
    key_ = new ::klee::ProtoArray(*from.key_);
  } else {
    key_ = NULL;
  }
  if (from.has_value()) {
    value_ = new ::klee::ProtoBitVector(*from.value_);
  } else {
    value_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:klee.ProtoBinding)
}

void ProtoBinding::SharedCtor() {
  ::memset(&key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&key_)) + sizeof(value_));
  _cached_size_ = 0;
}

ProtoBinding::~ProtoBinding() {
  // @@protoc_insertion_point(destructor:klee.ProtoBinding)
  SharedDtor();
}

void ProtoBinding::SharedDtor() {
  if (this != internal_default_instance()) delete key_;
  if (this != internal_default_instance()) delete value_;
}

void ProtoBinding::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoBinding::descriptor() {
  ::protobuf_Cache_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cache_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProtoBinding& ProtoBinding::default_instance() {
  ::protobuf_Cache_2eproto::InitDefaultsProtoBinding();
  return *internal_default_instance();
}

ProtoBinding* ProtoBinding::New(::google::protobuf::Arena* arena) const {
  ProtoBinding* n = new ProtoBinding;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProtoBinding::Clear() {
// @@protoc_insertion_point(message_clear_start:klee.ProtoBinding)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && key_ != NULL) {
    delete key_;
  }
  key_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
  _internal_metadata_.Clear();
}

bool ProtoBinding::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:klee.ProtoBinding)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .klee.ProtoArray key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .klee.ProtoBitVector value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:klee.ProtoBinding)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:klee.ProtoBinding)
  return false;
#undef DO_
}

void ProtoBinding::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:klee.ProtoBinding)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .klee.ProtoArray key = 1;
  if (this->has_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->key_, output);
  }

  // .klee.ProtoBitVector value = 2;
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->value_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:klee.ProtoBinding)
}

::google::protobuf::uint8* ProtoBinding::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:klee.ProtoBinding)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .klee.ProtoArray key = 1;
  if (this->has_key()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->key_, deterministic, target);
  }

  // .klee.ProtoBitVector value = 2;
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->value_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:klee.ProtoBinding)
  return target;
}

size_t ProtoBinding::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:klee.ProtoBinding)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .klee.ProtoArray key = 1;
  if (this->has_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->key_);
  }

  // .klee.ProtoBitVector value = 2;
  if (this->has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->value_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoBinding::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:klee.ProtoBinding)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoBinding* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProtoBinding>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:klee.ProtoBinding)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:klee.ProtoBinding)
    MergeFrom(*source);
  }
}

void ProtoBinding::MergeFrom(const ProtoBinding& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:klee.ProtoBinding)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_key()) {
    mutable_key()->::klee::ProtoArray::MergeFrom(from.key());
  }
  if (from.has_value()) {
    mutable_value()->::klee::ProtoBitVector::MergeFrom(from.value());
  }
}

void ProtoBinding::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:klee.ProtoBinding)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoBinding::CopyFrom(const ProtoBinding& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:klee.ProtoBinding)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoBinding::IsInitialized() const {
  return true;
}

void ProtoBinding::Swap(ProtoBinding* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProtoBinding::InternalSwap(ProtoBinding* other) {
  using std::swap;
  swap(key_, other->key_);
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProtoBinding::GetMetadata() const {
  protobuf_Cache_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cache_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProtoAssignment::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProtoAssignment::kAllowFreeValuesFieldNumber;
const int ProtoAssignment::kBindingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProtoAssignment::ProtoAssignment()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Cache_2eproto::InitDefaultsProtoAssignment();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:klee.ProtoAssignment)
}
ProtoAssignment::ProtoAssignment(const ProtoAssignment& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      binding_(from.binding_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  allowfreevalues_ = from.allowfreevalues_;
  // @@protoc_insertion_point(copy_constructor:klee.ProtoAssignment)
}

void ProtoAssignment::SharedCtor() {
  allowfreevalues_ = false;
  _cached_size_ = 0;
}

ProtoAssignment::~ProtoAssignment() {
  // @@protoc_insertion_point(destructor:klee.ProtoAssignment)
  SharedDtor();
}

void ProtoAssignment::SharedDtor() {
}

void ProtoAssignment::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoAssignment::descriptor() {
  ::protobuf_Cache_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cache_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProtoAssignment& ProtoAssignment::default_instance() {
  ::protobuf_Cache_2eproto::InitDefaultsProtoAssignment();
  return *internal_default_instance();
}

ProtoAssignment* ProtoAssignment::New(::google::protobuf::Arena* arena) const {
  ProtoAssignment* n = new ProtoAssignment;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProtoAssignment::Clear() {
// @@protoc_insertion_point(message_clear_start:klee.ProtoAssignment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  binding_.Clear();
  allowfreevalues_ = false;
  _internal_metadata_.Clear();
}

bool ProtoAssignment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:klee.ProtoAssignment)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool allowFreeValues = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &allowfreevalues_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .klee.ProtoBinding binding = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_binding()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:klee.ProtoAssignment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:klee.ProtoAssignment)
  return false;
#undef DO_
}

void ProtoAssignment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:klee.ProtoAssignment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool allowFreeValues = 1;
  if (this->allowfreevalues() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->allowfreevalues(), output);
  }

  // repeated .klee.ProtoBinding binding = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->binding_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->binding(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:klee.ProtoAssignment)
}

::google::protobuf::uint8* ProtoAssignment::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:klee.ProtoAssignment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool allowFreeValues = 1;
  if (this->allowfreevalues() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->allowfreevalues(), target);
  }

  // repeated .klee.ProtoBinding binding = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->binding_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->binding(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:klee.ProtoAssignment)
  return target;
}

size_t ProtoAssignment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:klee.ProtoAssignment)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .klee.ProtoBinding binding = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->binding_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->binding(static_cast<int>(i)));
    }
  }

  // bool allowFreeValues = 1;
  if (this->allowfreevalues() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoAssignment::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:klee.ProtoAssignment)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoAssignment* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProtoAssignment>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:klee.ProtoAssignment)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:klee.ProtoAssignment)
    MergeFrom(*source);
  }
}

void ProtoAssignment::MergeFrom(const ProtoAssignment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:klee.ProtoAssignment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  binding_.MergeFrom(from.binding_);
  if (from.allowfreevalues() != 0) {
    set_allowfreevalues(from.allowfreevalues());
  }
}

void ProtoAssignment::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:klee.ProtoAssignment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoAssignment::CopyFrom(const ProtoAssignment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:klee.ProtoAssignment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoAssignment::IsInitialized() const {
  return true;
}

void ProtoAssignment::Swap(ProtoAssignment* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProtoAssignment::InternalSwap(ProtoAssignment* other) {
  using std::swap;
  binding_.InternalSwap(&other->binding_);
  swap(allowfreevalues_, other->allowfreevalues_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProtoAssignment::GetMetadata() const {
  protobuf_Cache_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cache_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProtoConstExpr::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProtoConstExpr::kConstExprBWidthFieldNumber;
const int ProtoConstExpr::kConstExprValFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProtoConstExpr::ProtoConstExpr()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Cache_2eproto::InitDefaultsProtoConstExpr();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:klee.ProtoConstExpr)
}
ProtoConstExpr::ProtoConstExpr(const ProtoConstExpr& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&constexprval_, &from.constexprval_,
    static_cast<size_t>(reinterpret_cast<char*>(&constexprbwidth_) -
    reinterpret_cast<char*>(&constexprval_)) + sizeof(constexprbwidth_));
  // @@protoc_insertion_point(copy_constructor:klee.ProtoConstExpr)
}

void ProtoConstExpr::SharedCtor() {
  ::memset(&constexprval_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&constexprbwidth_) -
      reinterpret_cast<char*>(&constexprval_)) + sizeof(constexprbwidth_));
  _cached_size_ = 0;
}

ProtoConstExpr::~ProtoConstExpr() {
  // @@protoc_insertion_point(destructor:klee.ProtoConstExpr)
  SharedDtor();
}

void ProtoConstExpr::SharedDtor() {
}

void ProtoConstExpr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoConstExpr::descriptor() {
  ::protobuf_Cache_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cache_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProtoConstExpr& ProtoConstExpr::default_instance() {
  ::protobuf_Cache_2eproto::InitDefaultsProtoConstExpr();
  return *internal_default_instance();
}

ProtoConstExpr* ProtoConstExpr::New(::google::protobuf::Arena* arena) const {
  ProtoConstExpr* n = new ProtoConstExpr;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProtoConstExpr::Clear() {
// @@protoc_insertion_point(message_clear_start:klee.ProtoConstExpr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&constexprval_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&constexprbwidth_) -
      reinterpret_cast<char*>(&constexprval_)) + sizeof(constexprbwidth_));
  _internal_metadata_.Clear();
}

bool ProtoConstExpr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:klee.ProtoConstExpr)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 constExprBWidth = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &constexprbwidth_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 constExprVal = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &constexprval_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:klee.ProtoConstExpr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:klee.ProtoConstExpr)
  return false;
#undef DO_
}

void ProtoConstExpr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:klee.ProtoConstExpr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 constExprBWidth = 1;
  if (this->constexprbwidth() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->constexprbwidth(), output);
  }

  // uint64 constExprVal = 2;
  if (this->constexprval() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->constexprval(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:klee.ProtoConstExpr)
}

::google::protobuf::uint8* ProtoConstExpr::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:klee.ProtoConstExpr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 constExprBWidth = 1;
  if (this->constexprbwidth() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->constexprbwidth(), target);
  }

  // uint64 constExprVal = 2;
  if (this->constexprval() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->constexprval(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:klee.ProtoConstExpr)
  return target;
}

size_t ProtoConstExpr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:klee.ProtoConstExpr)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 constExprVal = 2;
  if (this->constexprval() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->constexprval());
  }

  // uint32 constExprBWidth = 1;
  if (this->constexprbwidth() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->constexprbwidth());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoConstExpr::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:klee.ProtoConstExpr)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoConstExpr* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProtoConstExpr>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:klee.ProtoConstExpr)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:klee.ProtoConstExpr)
    MergeFrom(*source);
  }
}

void ProtoConstExpr::MergeFrom(const ProtoConstExpr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:klee.ProtoConstExpr)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.constexprval() != 0) {
    set_constexprval(from.constexprval());
  }
  if (from.constexprbwidth() != 0) {
    set_constexprbwidth(from.constexprbwidth());
  }
}

void ProtoConstExpr::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:klee.ProtoConstExpr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoConstExpr::CopyFrom(const ProtoConstExpr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:klee.ProtoConstExpr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoConstExpr::IsInitialized() const {
  return true;
}

void ProtoConstExpr::Swap(ProtoConstExpr* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProtoConstExpr::InternalSwap(ProtoConstExpr* other) {
  using std::swap;
  swap(constexprval_, other->constexprval_);
  swap(constexprbwidth_, other->constexprbwidth_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProtoConstExpr::GetMetadata() const {
  protobuf_Cache_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cache_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProtoUpdateNode::InitAsDefaultInstance() {
  ::klee::_ProtoUpdateNode_default_instance_._instance.get_mutable()->updateindex_ = const_cast< ::klee::ProtoExpr*>(
      ::klee::ProtoExpr::internal_default_instance());
  ::klee::_ProtoUpdateNode_default_instance_._instance.get_mutable()->updatevalue_ = const_cast< ::klee::ProtoExpr*>(
      ::klee::ProtoExpr::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProtoUpdateNode::kUpdateIndexFieldNumber;
const int ProtoUpdateNode::kUpdateValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProtoUpdateNode::ProtoUpdateNode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Cache_2eproto::InitDefaultsProtoArray();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:klee.ProtoUpdateNode)
}
ProtoUpdateNode::ProtoUpdateNode(const ProtoUpdateNode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_updateindex()) {
    updateindex_ = new ::klee::ProtoExpr(*from.updateindex_);
  } else {
    updateindex_ = NULL;
  }
  if (from.has_updatevalue()) {
    updatevalue_ = new ::klee::ProtoExpr(*from.updatevalue_);
  } else {
    updatevalue_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:klee.ProtoUpdateNode)
}

void ProtoUpdateNode::SharedCtor() {
  ::memset(&updateindex_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&updatevalue_) -
      reinterpret_cast<char*>(&updateindex_)) + sizeof(updatevalue_));
  _cached_size_ = 0;
}

ProtoUpdateNode::~ProtoUpdateNode() {
  // @@protoc_insertion_point(destructor:klee.ProtoUpdateNode)
  SharedDtor();
}

void ProtoUpdateNode::SharedDtor() {
  if (this != internal_default_instance()) delete updateindex_;
  if (this != internal_default_instance()) delete updatevalue_;
}

void ProtoUpdateNode::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoUpdateNode::descriptor() {
  ::protobuf_Cache_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cache_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProtoUpdateNode& ProtoUpdateNode::default_instance() {
  ::protobuf_Cache_2eproto::InitDefaultsProtoArray();
  return *internal_default_instance();
}

ProtoUpdateNode* ProtoUpdateNode::New(::google::protobuf::Arena* arena) const {
  ProtoUpdateNode* n = new ProtoUpdateNode;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProtoUpdateNode::Clear() {
// @@protoc_insertion_point(message_clear_start:klee.ProtoUpdateNode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && updateindex_ != NULL) {
    delete updateindex_;
  }
  updateindex_ = NULL;
  if (GetArenaNoVirtual() == NULL && updatevalue_ != NULL) {
    delete updatevalue_;
  }
  updatevalue_ = NULL;
  _internal_metadata_.Clear();
}

bool ProtoUpdateNode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:klee.ProtoUpdateNode)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .klee.ProtoExpr updateIndex = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_updateindex()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .klee.ProtoExpr updateValue = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_updatevalue()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:klee.ProtoUpdateNode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:klee.ProtoUpdateNode)
  return false;
#undef DO_
}

void ProtoUpdateNode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:klee.ProtoUpdateNode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .klee.ProtoExpr updateIndex = 1;
  if (this->has_updateindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->updateindex_, output);
  }

  // .klee.ProtoExpr updateValue = 2;
  if (this->has_updatevalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->updatevalue_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:klee.ProtoUpdateNode)
}

::google::protobuf::uint8* ProtoUpdateNode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:klee.ProtoUpdateNode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .klee.ProtoExpr updateIndex = 1;
  if (this->has_updateindex()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->updateindex_, deterministic, target);
  }

  // .klee.ProtoExpr updateValue = 2;
  if (this->has_updatevalue()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->updatevalue_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:klee.ProtoUpdateNode)
  return target;
}

size_t ProtoUpdateNode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:klee.ProtoUpdateNode)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .klee.ProtoExpr updateIndex = 1;
  if (this->has_updateindex()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->updateindex_);
  }

  // .klee.ProtoExpr updateValue = 2;
  if (this->has_updatevalue()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->updatevalue_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoUpdateNode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:klee.ProtoUpdateNode)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoUpdateNode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProtoUpdateNode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:klee.ProtoUpdateNode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:klee.ProtoUpdateNode)
    MergeFrom(*source);
  }
}

void ProtoUpdateNode::MergeFrom(const ProtoUpdateNode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:klee.ProtoUpdateNode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_updateindex()) {
    mutable_updateindex()->::klee::ProtoExpr::MergeFrom(from.updateindex());
  }
  if (from.has_updatevalue()) {
    mutable_updatevalue()->::klee::ProtoExpr::MergeFrom(from.updatevalue());
  }
}

void ProtoUpdateNode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:klee.ProtoUpdateNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoUpdateNode::CopyFrom(const ProtoUpdateNode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:klee.ProtoUpdateNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoUpdateNode::IsInitialized() const {
  return true;
}

void ProtoUpdateNode::Swap(ProtoUpdateNode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProtoUpdateNode::InternalSwap(ProtoUpdateNode* other) {
  using std::swap;
  swap(updateindex_, other->updateindex_);
  swap(updatevalue_, other->updatevalue_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProtoUpdateNode::GetMetadata() const {
  protobuf_Cache_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cache_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProtoReadExpr::InitAsDefaultInstance() {
  ::klee::_ProtoReadExpr_default_instance_._instance.get_mutable()->root_ = const_cast< ::klee::ProtoArray*>(
      ::klee::ProtoArray::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProtoReadExpr::kUpdateListFieldNumber;
const int ProtoReadExpr::kRootFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProtoReadExpr::ProtoReadExpr()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Cache_2eproto::InitDefaultsProtoArray();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:klee.ProtoReadExpr)
}
ProtoReadExpr::ProtoReadExpr(const ProtoReadExpr& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      updatelist_(from.updatelist_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_root()) {
    root_ = new ::klee::ProtoArray(*from.root_);
  } else {
    root_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:klee.ProtoReadExpr)
}

void ProtoReadExpr::SharedCtor() {
  root_ = NULL;
  _cached_size_ = 0;
}

ProtoReadExpr::~ProtoReadExpr() {
  // @@protoc_insertion_point(destructor:klee.ProtoReadExpr)
  SharedDtor();
}

void ProtoReadExpr::SharedDtor() {
  if (this != internal_default_instance()) delete root_;
}

void ProtoReadExpr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoReadExpr::descriptor() {
  ::protobuf_Cache_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cache_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProtoReadExpr& ProtoReadExpr::default_instance() {
  ::protobuf_Cache_2eproto::InitDefaultsProtoArray();
  return *internal_default_instance();
}

ProtoReadExpr* ProtoReadExpr::New(::google::protobuf::Arena* arena) const {
  ProtoReadExpr* n = new ProtoReadExpr;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProtoReadExpr::Clear() {
// @@protoc_insertion_point(message_clear_start:klee.ProtoReadExpr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  updatelist_.Clear();
  if (GetArenaNoVirtual() == NULL && root_ != NULL) {
    delete root_;
  }
  root_ = NULL;
  _internal_metadata_.Clear();
}

bool ProtoReadExpr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:klee.ProtoReadExpr)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .klee.ProtoUpdateNode updateList = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_updatelist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .klee.ProtoArray root = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_root()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:klee.ProtoReadExpr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:klee.ProtoReadExpr)
  return false;
#undef DO_
}

void ProtoReadExpr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:klee.ProtoReadExpr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .klee.ProtoUpdateNode updateList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->updatelist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->updatelist(static_cast<int>(i)), output);
  }

  // .klee.ProtoArray root = 2;
  if (this->has_root()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->root_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:klee.ProtoReadExpr)
}

::google::protobuf::uint8* ProtoReadExpr::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:klee.ProtoReadExpr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .klee.ProtoUpdateNode updateList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->updatelist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->updatelist(static_cast<int>(i)), deterministic, target);
  }

  // .klee.ProtoArray root = 2;
  if (this->has_root()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->root_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:klee.ProtoReadExpr)
  return target;
}

size_t ProtoReadExpr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:klee.ProtoReadExpr)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .klee.ProtoUpdateNode updateList = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->updatelist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->updatelist(static_cast<int>(i)));
    }
  }

  // .klee.ProtoArray root = 2;
  if (this->has_root()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->root_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoReadExpr::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:klee.ProtoReadExpr)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoReadExpr* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProtoReadExpr>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:klee.ProtoReadExpr)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:klee.ProtoReadExpr)
    MergeFrom(*source);
  }
}

void ProtoReadExpr::MergeFrom(const ProtoReadExpr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:klee.ProtoReadExpr)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  updatelist_.MergeFrom(from.updatelist_);
  if (from.has_root()) {
    mutable_root()->::klee::ProtoArray::MergeFrom(from.root());
  }
}

void ProtoReadExpr::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:klee.ProtoReadExpr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoReadExpr::CopyFrom(const ProtoReadExpr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:klee.ProtoReadExpr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoReadExpr::IsInitialized() const {
  return true;
}

void ProtoReadExpr::Swap(ProtoReadExpr* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProtoReadExpr::InternalSwap(ProtoReadExpr* other) {
  using std::swap;
  updatelist_.InternalSwap(&other->updatelist_);
  swap(root_, other->root_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProtoReadExpr::GetMetadata() const {
  protobuf_Cache_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cache_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProtoExtractExpr::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProtoExtractExpr::kExtractBitOffFieldNumber;
const int ProtoExtractExpr::kExtractWidthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProtoExtractExpr::ProtoExtractExpr()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Cache_2eproto::InitDefaultsProtoExtractExpr();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:klee.ProtoExtractExpr)
}
ProtoExtractExpr::ProtoExtractExpr(const ProtoExtractExpr& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&extractbitoff_, &from.extractbitoff_,
    static_cast<size_t>(reinterpret_cast<char*>(&extractwidth_) -
    reinterpret_cast<char*>(&extractbitoff_)) + sizeof(extractwidth_));
  // @@protoc_insertion_point(copy_constructor:klee.ProtoExtractExpr)
}

void ProtoExtractExpr::SharedCtor() {
  ::memset(&extractbitoff_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&extractwidth_) -
      reinterpret_cast<char*>(&extractbitoff_)) + sizeof(extractwidth_));
  _cached_size_ = 0;
}

ProtoExtractExpr::~ProtoExtractExpr() {
  // @@protoc_insertion_point(destructor:klee.ProtoExtractExpr)
  SharedDtor();
}

void ProtoExtractExpr::SharedDtor() {
}

void ProtoExtractExpr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoExtractExpr::descriptor() {
  ::protobuf_Cache_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cache_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProtoExtractExpr& ProtoExtractExpr::default_instance() {
  ::protobuf_Cache_2eproto::InitDefaultsProtoExtractExpr();
  return *internal_default_instance();
}

ProtoExtractExpr* ProtoExtractExpr::New(::google::protobuf::Arena* arena) const {
  ProtoExtractExpr* n = new ProtoExtractExpr;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProtoExtractExpr::Clear() {
// @@protoc_insertion_point(message_clear_start:klee.ProtoExtractExpr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&extractbitoff_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&extractwidth_) -
      reinterpret_cast<char*>(&extractbitoff_)) + sizeof(extractwidth_));
  _internal_metadata_.Clear();
}

bool ProtoExtractExpr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:klee.ProtoExtractExpr)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 extractBitOff = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &extractbitoff_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 extractWidth = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &extractwidth_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:klee.ProtoExtractExpr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:klee.ProtoExtractExpr)
  return false;
#undef DO_
}

void ProtoExtractExpr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:klee.ProtoExtractExpr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 extractBitOff = 1;
  if (this->extractbitoff() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->extractbitoff(), output);
  }

  // uint32 extractWidth = 2;
  if (this->extractwidth() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->extractwidth(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:klee.ProtoExtractExpr)
}

::google::protobuf::uint8* ProtoExtractExpr::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:klee.ProtoExtractExpr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 extractBitOff = 1;
  if (this->extractbitoff() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->extractbitoff(), target);
  }

  // uint32 extractWidth = 2;
  if (this->extractwidth() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->extractwidth(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:klee.ProtoExtractExpr)
  return target;
}

size_t ProtoExtractExpr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:klee.ProtoExtractExpr)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 extractBitOff = 1;
  if (this->extractbitoff() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->extractbitoff());
  }

  // uint32 extractWidth = 2;
  if (this->extractwidth() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->extractwidth());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoExtractExpr::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:klee.ProtoExtractExpr)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoExtractExpr* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProtoExtractExpr>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:klee.ProtoExtractExpr)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:klee.ProtoExtractExpr)
    MergeFrom(*source);
  }
}

void ProtoExtractExpr::MergeFrom(const ProtoExtractExpr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:klee.ProtoExtractExpr)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.extractbitoff() != 0) {
    set_extractbitoff(from.extractbitoff());
  }
  if (from.extractwidth() != 0) {
    set_extractwidth(from.extractwidth());
  }
}

void ProtoExtractExpr::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:klee.ProtoExtractExpr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoExtractExpr::CopyFrom(const ProtoExtractExpr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:klee.ProtoExtractExpr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoExtractExpr::IsInitialized() const {
  return true;
}

void ProtoExtractExpr::Swap(ProtoExtractExpr* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProtoExtractExpr::InternalSwap(ProtoExtractExpr* other) {
  using std::swap;
  swap(extractbitoff_, other->extractbitoff_);
  swap(extractwidth_, other->extractwidth_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProtoExtractExpr::GetMetadata() const {
  protobuf_Cache_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cache_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProtoExpr::InitAsDefaultInstance() {
  ::klee::_ProtoExpr_default_instance_.constdata_ = const_cast< ::klee::ProtoConstExpr*>(
      ::klee::ProtoConstExpr::internal_default_instance());
  ::klee::_ProtoExpr_default_instance_.readdata_ = const_cast< ::klee::ProtoReadExpr*>(
      ::klee::ProtoReadExpr::internal_default_instance());
  ::klee::_ProtoExpr_default_instance_.extractdata_ = const_cast< ::klee::ProtoExtractExpr*>(
      ::klee::ProtoExtractExpr::internal_default_instance());
}
void ProtoExpr::set_allocated_constdata(::klee::ProtoConstExpr* constdata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_specialData();
  if (constdata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      constdata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, constdata, submessage_arena);
    }
    set_has_constdata();
    specialData_.constdata_ = constdata;
  }
  // @@protoc_insertion_point(field_set_allocated:klee.ProtoExpr.constData)
}
void ProtoExpr::set_allocated_readdata(::klee::ProtoReadExpr* readdata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_specialData();
  if (readdata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      readdata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, readdata, submessage_arena);
    }
    set_has_readdata();
    specialData_.readdata_ = readdata;
  }
  // @@protoc_insertion_point(field_set_allocated:klee.ProtoExpr.readData)
}
void ProtoExpr::set_allocated_extractdata(::klee::ProtoExtractExpr* extractdata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_specialData();
  if (extractdata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      extractdata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, extractdata, submessage_arena);
    }
    set_has_extractdata();
    specialData_.extractdata_ = extractdata;
  }
  // @@protoc_insertion_point(field_set_allocated:klee.ProtoExpr.extractData)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProtoExpr::kWidthFieldNumber;
const int ProtoExpr::kKindFieldNumber;
const int ProtoExpr::kRefCountFieldNumber;
const int ProtoExpr::kHashFieldNumber;
const int ProtoExpr::kNumKidsFieldNumber;
const int ProtoExpr::kKidsFieldNumber;
const int ProtoExpr::kConstDataFieldNumber;
const int ProtoExpr::kReadDataFieldNumber;
const int ProtoExpr::kExtractDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProtoExpr::ProtoExpr()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Cache_2eproto::InitDefaultsProtoArray();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:klee.ProtoExpr)
}
ProtoExpr::ProtoExpr(const ProtoExpr& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      kids_(from.kids_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&width_, &from.width_,
    static_cast<size_t>(reinterpret_cast<char*>(&numkids_) -
    reinterpret_cast<char*>(&width_)) + sizeof(numkids_));
  clear_has_specialData();
  switch (from.specialData_case()) {
    case kConstData: {
      mutable_constdata()->::klee::ProtoConstExpr::MergeFrom(from.constdata());
      break;
    }
    case kReadData: {
      mutable_readdata()->::klee::ProtoReadExpr::MergeFrom(from.readdata());
      break;
    }
    case kExtractData: {
      mutable_extractdata()->::klee::ProtoExtractExpr::MergeFrom(from.extractdata());
      break;
    }
    case SPECIALDATA_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:klee.ProtoExpr)
}

void ProtoExpr::SharedCtor() {
  ::memset(&width_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&numkids_) -
      reinterpret_cast<char*>(&width_)) + sizeof(numkids_));
  clear_has_specialData();
  _cached_size_ = 0;
}

ProtoExpr::~ProtoExpr() {
  // @@protoc_insertion_point(destructor:klee.ProtoExpr)
  SharedDtor();
}

void ProtoExpr::SharedDtor() {
  if (has_specialData()) {
    clear_specialData();
  }
}

void ProtoExpr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoExpr::descriptor() {
  ::protobuf_Cache_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cache_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProtoExpr& ProtoExpr::default_instance() {
  ::protobuf_Cache_2eproto::InitDefaultsProtoArray();
  return *internal_default_instance();
}

ProtoExpr* ProtoExpr::New(::google::protobuf::Arena* arena) const {
  ProtoExpr* n = new ProtoExpr;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProtoExpr::clear_specialData() {
// @@protoc_insertion_point(one_of_clear_start:klee.ProtoExpr)
  switch (specialData_case()) {
    case kConstData: {
      delete specialData_.constdata_;
      break;
    }
    case kReadData: {
      delete specialData_.readdata_;
      break;
    }
    case kExtractData: {
      delete specialData_.extractdata_;
      break;
    }
    case SPECIALDATA_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = SPECIALDATA_NOT_SET;
}


void ProtoExpr::Clear() {
// @@protoc_insertion_point(message_clear_start:klee.ProtoExpr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  kids_.Clear();
  ::memset(&width_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&numkids_) -
      reinterpret_cast<char*>(&width_)) + sizeof(numkids_));
  clear_specialData();
  _internal_metadata_.Clear();
}

bool ProtoExpr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:klee.ProtoExpr)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 width = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 kind = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &kind_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 refCount = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &refcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 hash = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hash_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 numKids = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &numkids_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .klee.ProtoExpr kids = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_kids()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .klee.ProtoConstExpr constData = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_constdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .klee.ProtoReadExpr readData = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_readdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .klee.ProtoExtractExpr extractData = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_extractdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:klee.ProtoExpr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:klee.ProtoExpr)
  return false;
#undef DO_
}

void ProtoExpr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:klee.ProtoExpr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 width = 1;
  if (this->width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->width(), output);
  }

  // uint32 kind = 2;
  if (this->kind() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->kind(), output);
  }

  // uint32 refCount = 3;
  if (this->refcount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->refcount(), output);
  }

  // uint32 hash = 4;
  if (this->hash() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->hash(), output);
  }

  // uint32 numKids = 5;
  if (this->numkids() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->numkids(), output);
  }

  // repeated .klee.ProtoExpr kids = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->kids_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->kids(static_cast<int>(i)), output);
  }

  // .klee.ProtoConstExpr constData = 7;
  if (has_constdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *specialData_.constdata_, output);
  }

  // .klee.ProtoReadExpr readData = 8;
  if (has_readdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *specialData_.readdata_, output);
  }

  // .klee.ProtoExtractExpr extractData = 9;
  if (has_extractdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *specialData_.extractdata_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:klee.ProtoExpr)
}

::google::protobuf::uint8* ProtoExpr::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:klee.ProtoExpr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 width = 1;
  if (this->width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->width(), target);
  }

  // uint32 kind = 2;
  if (this->kind() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->kind(), target);
  }

  // uint32 refCount = 3;
  if (this->refcount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->refcount(), target);
  }

  // uint32 hash = 4;
  if (this->hash() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->hash(), target);
  }

  // uint32 numKids = 5;
  if (this->numkids() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->numkids(), target);
  }

  // repeated .klee.ProtoExpr kids = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->kids_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->kids(static_cast<int>(i)), deterministic, target);
  }

  // .klee.ProtoConstExpr constData = 7;
  if (has_constdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, *specialData_.constdata_, deterministic, target);
  }

  // .klee.ProtoReadExpr readData = 8;
  if (has_readdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, *specialData_.readdata_, deterministic, target);
  }

  // .klee.ProtoExtractExpr extractData = 9;
  if (has_extractdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, *specialData_.extractdata_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:klee.ProtoExpr)
  return target;
}

size_t ProtoExpr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:klee.ProtoExpr)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .klee.ProtoExpr kids = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->kids_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->kids(static_cast<int>(i)));
    }
  }

  // uint32 width = 1;
  if (this->width() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->width());
  }

  // uint32 kind = 2;
  if (this->kind() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->kind());
  }

  // uint32 refCount = 3;
  if (this->refcount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->refcount());
  }

  // uint32 hash = 4;
  if (this->hash() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hash());
  }

  // uint32 numKids = 5;
  if (this->numkids() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->numkids());
  }

  switch (specialData_case()) {
    // .klee.ProtoConstExpr constData = 7;
    case kConstData: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *specialData_.constdata_);
      break;
    }
    // .klee.ProtoReadExpr readData = 8;
    case kReadData: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *specialData_.readdata_);
      break;
    }
    // .klee.ProtoExtractExpr extractData = 9;
    case kExtractData: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *specialData_.extractdata_);
      break;
    }
    case SPECIALDATA_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoExpr::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:klee.ProtoExpr)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoExpr* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProtoExpr>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:klee.ProtoExpr)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:klee.ProtoExpr)
    MergeFrom(*source);
  }
}

void ProtoExpr::MergeFrom(const ProtoExpr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:klee.ProtoExpr)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  kids_.MergeFrom(from.kids_);
  if (from.width() != 0) {
    set_width(from.width());
  }
  if (from.kind() != 0) {
    set_kind(from.kind());
  }
  if (from.refcount() != 0) {
    set_refcount(from.refcount());
  }
  if (from.hash() != 0) {
    set_hash(from.hash());
  }
  if (from.numkids() != 0) {
    set_numkids(from.numkids());
  }
  switch (from.specialData_case()) {
    case kConstData: {
      mutable_constdata()->::klee::ProtoConstExpr::MergeFrom(from.constdata());
      break;
    }
    case kReadData: {
      mutable_readdata()->::klee::ProtoReadExpr::MergeFrom(from.readdata());
      break;
    }
    case kExtractData: {
      mutable_extractdata()->::klee::ProtoExtractExpr::MergeFrom(from.extractdata());
      break;
    }
    case SPECIALDATA_NOT_SET: {
      break;
    }
  }
}

void ProtoExpr::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:klee.ProtoExpr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoExpr::CopyFrom(const ProtoExpr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:klee.ProtoExpr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoExpr::IsInitialized() const {
  return true;
}

void ProtoExpr::Swap(ProtoExpr* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProtoExpr::InternalSwap(ProtoExpr* other) {
  using std::swap;
  kids_.InternalSwap(&other->kids_);
  swap(width_, other->width_);
  swap(kind_, other->kind_);
  swap(refcount_, other->refcount_);
  swap(hash_, other->hash_);
  swap(numkids_, other->numkids_);
  swap(specialData_, other->specialData_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProtoExpr::GetMetadata() const {
  protobuf_Cache_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cache_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProtoCacheElem::InitAsDefaultInstance() {
  ::klee::_ProtoCacheElem_default_instance_._instance.get_mutable()->assignment_ = const_cast< ::klee::ProtoAssignment*>(
      ::klee::ProtoAssignment::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProtoCacheElem::kKeyFieldNumber;
const int ProtoCacheElem::kAssignmentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProtoCacheElem::ProtoCacheElem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Cache_2eproto::InitDefaultsProtoCacheElem();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:klee.ProtoCacheElem)
}
ProtoCacheElem::ProtoCacheElem(const ProtoCacheElem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      key_(from.key_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_assignment()) {
    assignment_ = new ::klee::ProtoAssignment(*from.assignment_);
  } else {
    assignment_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:klee.ProtoCacheElem)
}

void ProtoCacheElem::SharedCtor() {
  assignment_ = NULL;
  _cached_size_ = 0;
}

ProtoCacheElem::~ProtoCacheElem() {
  // @@protoc_insertion_point(destructor:klee.ProtoCacheElem)
  SharedDtor();
}

void ProtoCacheElem::SharedDtor() {
  if (this != internal_default_instance()) delete assignment_;
}

void ProtoCacheElem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoCacheElem::descriptor() {
  ::protobuf_Cache_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cache_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProtoCacheElem& ProtoCacheElem::default_instance() {
  ::protobuf_Cache_2eproto::InitDefaultsProtoCacheElem();
  return *internal_default_instance();
}

ProtoCacheElem* ProtoCacheElem::New(::google::protobuf::Arena* arena) const {
  ProtoCacheElem* n = new ProtoCacheElem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProtoCacheElem::Clear() {
// @@protoc_insertion_point(message_clear_start:klee.ProtoCacheElem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.Clear();
  if (GetArenaNoVirtual() == NULL && assignment_ != NULL) {
    delete assignment_;
  }
  assignment_ = NULL;
  _internal_metadata_.Clear();
}

bool ProtoCacheElem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:klee.ProtoCacheElem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .klee.ProtoExpr key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .klee.ProtoAssignment assignment = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_assignment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:klee.ProtoCacheElem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:klee.ProtoCacheElem)
  return false;
#undef DO_
}

void ProtoCacheElem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:klee.ProtoCacheElem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .klee.ProtoExpr key = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->key_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->key(static_cast<int>(i)), output);
  }

  // .klee.ProtoAssignment assignment = 2;
  if (this->has_assignment()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->assignment_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:klee.ProtoCacheElem)
}

::google::protobuf::uint8* ProtoCacheElem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:klee.ProtoCacheElem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .klee.ProtoExpr key = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->key_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->key(static_cast<int>(i)), deterministic, target);
  }

  // .klee.ProtoAssignment assignment = 2;
  if (this->has_assignment()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->assignment_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:klee.ProtoCacheElem)
  return target;
}

size_t ProtoCacheElem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:klee.ProtoCacheElem)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .klee.ProtoExpr key = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->key_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->key(static_cast<int>(i)));
    }
  }

  // .klee.ProtoAssignment assignment = 2;
  if (this->has_assignment()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->assignment_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoCacheElem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:klee.ProtoCacheElem)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoCacheElem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProtoCacheElem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:klee.ProtoCacheElem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:klee.ProtoCacheElem)
    MergeFrom(*source);
  }
}

void ProtoCacheElem::MergeFrom(const ProtoCacheElem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:klee.ProtoCacheElem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  key_.MergeFrom(from.key_);
  if (from.has_assignment()) {
    mutable_assignment()->::klee::ProtoAssignment::MergeFrom(from.assignment());
  }
}

void ProtoCacheElem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:klee.ProtoCacheElem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoCacheElem::CopyFrom(const ProtoCacheElem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:klee.ProtoCacheElem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoCacheElem::IsInitialized() const {
  return true;
}

void ProtoCacheElem::Swap(ProtoCacheElem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProtoCacheElem::InternalSwap(ProtoCacheElem* other) {
  using std::swap;
  key_.InternalSwap(&other->key_);
  swap(assignment_, other->assignment_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProtoCacheElem::GetMetadata() const {
  protobuf_Cache_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cache_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProtoCache::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProtoCache::kElemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProtoCache::ProtoCache()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Cache_2eproto::InitDefaultsProtoCache();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:klee.ProtoCache)
}
ProtoCache::ProtoCache(const ProtoCache& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      elem_(from.elem_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:klee.ProtoCache)
}

void ProtoCache::SharedCtor() {
  _cached_size_ = 0;
}

ProtoCache::~ProtoCache() {
  // @@protoc_insertion_point(destructor:klee.ProtoCache)
  SharedDtor();
}

void ProtoCache::SharedDtor() {
}

void ProtoCache::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoCache::descriptor() {
  ::protobuf_Cache_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cache_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProtoCache& ProtoCache::default_instance() {
  ::protobuf_Cache_2eproto::InitDefaultsProtoCache();
  return *internal_default_instance();
}

ProtoCache* ProtoCache::New(::google::protobuf::Arena* arena) const {
  ProtoCache* n = new ProtoCache;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProtoCache::Clear() {
// @@protoc_insertion_point(message_clear_start:klee.ProtoCache)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  elem_.Clear();
  _internal_metadata_.Clear();
}

bool ProtoCache::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:klee.ProtoCache)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .klee.ProtoCacheElem elem = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_elem()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:klee.ProtoCache)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:klee.ProtoCache)
  return false;
#undef DO_
}

void ProtoCache::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:klee.ProtoCache)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .klee.ProtoCacheElem elem = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->elem_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->elem(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:klee.ProtoCache)
}

::google::protobuf::uint8* ProtoCache::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:klee.ProtoCache)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .klee.ProtoCacheElem elem = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->elem_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->elem(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:klee.ProtoCache)
  return target;
}

size_t ProtoCache::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:klee.ProtoCache)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .klee.ProtoCacheElem elem = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->elem_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->elem(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoCache::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:klee.ProtoCache)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoCache* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProtoCache>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:klee.ProtoCache)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:klee.ProtoCache)
    MergeFrom(*source);
  }
}

void ProtoCache::MergeFrom(const ProtoCache& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:klee.ProtoCache)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  elem_.MergeFrom(from.elem_);
}

void ProtoCache::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:klee.ProtoCache)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoCache::CopyFrom(const ProtoCache& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:klee.ProtoCache)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoCache::IsInitialized() const {
  return true;
}

void ProtoCache::Swap(ProtoCache* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProtoCache::InternalSwap(ProtoCache* other) {
  using std::swap;
  elem_.InternalSwap(&other->elem_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProtoCache::GetMetadata() const {
  protobuf_Cache_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cache_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace klee

// @@protoc_insertion_point(global_scope)
