project(klee_pcache)
find_package(protobuf)
find_package(capnp)
find_package(cpp_redis)
if(REDIS_FOUND)
    set(ENABLE_REDIS 1)
    message(STATUS "-- Redis support enabled")
endif()
if((NOT CAPNP_FOUND) AND (NOT REDIS_FOUND))
    message(FATAL_ERROR "Either protobuf and redis or capnp is required to build persistent cache support")
endif()

if(ENABLE_REDIS)
    klee_add_component(klee_pcache RedisInstance.cpp RedisFinder.cpp PersistentMapOfSets.cpp PersistentMapOfSetsFinder.cpp NameNormalizer.cpp Trie.cpp TrieFinder.h TrieFinder.cpp NameNormalizerFinder.cpp AlgebraComparisonNormalizer.cpp Predicates.h)
else()
    klee_add_component(klee_pcache PersistentMapOfSets.cpp PersistentMapOfSetsFinder.cpp NameNormalizer.cpp Trie.cpp TrieFinder.h TrieFinder.cpp NameNormalizerFinder.cpp AlgebraComparisonNormalizer.cpp Predicates.h)
endif()
set(LLVM_COMPONENTS
        support
        )
klee_get_llvm_libs(LLVM_LIBS ${LLVM_COMPONENTS})
target_link_libraries(klee_pcache PUBLIC ${LLVM_LIBS})
target_link_libraries(klee_pcache PUBLIC protobuf capnp kj kleaverExpr)
if(ENABLE_REDIS)
    target_link_libraries(klee_pcache PUBLIC tacopie cpp_redis)
endif()