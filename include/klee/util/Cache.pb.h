// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Cache.proto

#ifndef PROTOBUF_Cache_2eproto_INCLUDED
#define PROTOBUF_Cache_2eproto_INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_Cache_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[11];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsProtoArrayImpl();
void InitDefaultsProtoArray();
void InitDefaultsProtoBitVectorImpl();
void InitDefaultsProtoBitVector();
void InitDefaultsProtoAssignmentImpl();
void InitDefaultsProtoAssignment();
void InitDefaultsProtoConstExprImpl();
void InitDefaultsProtoConstExpr();
void InitDefaultsProtoCacheElemImpl();
void InitDefaultsProtoCacheElem();
void InitDefaultsProtoCacheImpl();
void InitDefaultsProtoCache();
inline void InitDefaults() {
  InitDefaultsProtoArray();
  InitDefaultsProtoBitVector();
  InitDefaultsProtoAssignment();
  InitDefaultsProtoConstExpr();
  InitDefaultsProtoCacheElem();
  InitDefaultsProtoCache();
}
}  // namespace protobuf_Cache_2eproto
namespace klee {
class ProtoArray;
class ProtoArrayDefaultTypeInternal;
extern ProtoArrayDefaultTypeInternal _ProtoArray_default_instance_;
class ProtoAssignment;
class ProtoAssignmentDefaultTypeInternal;
extern ProtoAssignmentDefaultTypeInternal _ProtoAssignment_default_instance_;
class ProtoBitVector;
class ProtoBitVectorDefaultTypeInternal;
extern ProtoBitVectorDefaultTypeInternal _ProtoBitVector_default_instance_;
class ProtoCache;
class ProtoCacheDefaultTypeInternal;
extern ProtoCacheDefaultTypeInternal _ProtoCache_default_instance_;
class ProtoCacheElem;
class ProtoCacheElemDefaultTypeInternal;
extern ProtoCacheElemDefaultTypeInternal _ProtoCacheElem_default_instance_;
class ProtoConstExpr;
class ProtoConstExprDefaultTypeInternal;
extern ProtoConstExprDefaultTypeInternal _ProtoConstExpr_default_instance_;
class ProtoExpr;
class ProtoExprDefaultTypeInternal;
extern ProtoExprDefaultTypeInternal _ProtoExpr_default_instance_;
class ProtoExtractExpr;
class ProtoExtractExprDefaultTypeInternal;
extern ProtoExtractExprDefaultTypeInternal _ProtoExtractExpr_default_instance_;
class ProtoNotOptimizedExpr;
class ProtoNotOptimizedExprDefaultTypeInternal;
extern ProtoNotOptimizedExprDefaultTypeInternal _ProtoNotOptimizedExpr_default_instance_;
class ProtoReadExpr;
class ProtoReadExprDefaultTypeInternal;
extern ProtoReadExprDefaultTypeInternal _ProtoReadExpr_default_instance_;
class ProtoUpdateNode;
class ProtoUpdateNodeDefaultTypeInternal;
extern ProtoUpdateNodeDefaultTypeInternal _ProtoUpdateNode_default_instance_;
}  // namespace klee
namespace google {
namespace protobuf {
template<> ::klee::ProtoArray* Arena::Create< ::klee::ProtoArray>(Arena*);
template<> ::klee::ProtoAssignment* Arena::Create< ::klee::ProtoAssignment>(Arena*);
template<> ::klee::ProtoBitVector* Arena::Create< ::klee::ProtoBitVector>(Arena*);
template<> ::klee::ProtoCache* Arena::Create< ::klee::ProtoCache>(Arena*);
template<> ::klee::ProtoCacheElem* Arena::Create< ::klee::ProtoCacheElem>(Arena*);
template<> ::klee::ProtoConstExpr* Arena::Create< ::klee::ProtoConstExpr>(Arena*);
template<> ::klee::ProtoExpr* Arena::Create< ::klee::ProtoExpr>(Arena*);
template<> ::klee::ProtoExtractExpr* Arena::Create< ::klee::ProtoExtractExpr>(Arena*);
template<> ::klee::ProtoNotOptimizedExpr* Arena::Create< ::klee::ProtoNotOptimizedExpr>(Arena*);
template<> ::klee::ProtoReadExpr* Arena::Create< ::klee::ProtoReadExpr>(Arena*);
template<> ::klee::ProtoUpdateNode* Arena::Create< ::klee::ProtoUpdateNode>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace klee {

// ===================================================================

class ProtoArray : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:klee.ProtoArray) */ {
 public:
  ProtoArray();
  virtual ~ProtoArray();

  ProtoArray(const ProtoArray& from);

  inline ProtoArray& operator=(const ProtoArray& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProtoArray(ProtoArray&& from) noexcept
    : ProtoArray() {
    *this = ::std::move(from);
  }

  inline ProtoArray& operator=(ProtoArray&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoArray& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProtoArray* internal_default_instance() {
    return reinterpret_cast<const ProtoArray*>(
               &_ProtoArray_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(ProtoArray* other);
  friend void swap(ProtoArray& a, ProtoArray& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProtoArray* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ProtoArray>(NULL);
  }

  ProtoArray* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ProtoArray>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ProtoArray& from);
  void MergeFrom(const ProtoArray& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ProtoArray* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .klee.ProtoExpr constantValues = 9;
  int constantvalues_size() const;
  void clear_constantvalues();
  static const int kConstantValuesFieldNumber = 9;
  ::klee::ProtoExpr* mutable_constantvalues(int index);
  ::google::protobuf::RepeatedPtrField< ::klee::ProtoExpr >*
      mutable_constantvalues();
  const ::klee::ProtoExpr& constantvalues(int index) const;
  ::klee::ProtoExpr* add_constantvalues();
  const ::google::protobuf::RepeatedPtrField< ::klee::ProtoExpr >&
      constantvalues() const;

  // required string name = 5;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 5;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required uint64 size = 6;
  bool has_size() const;
  void clear_size();
  static const int kSizeFieldNumber = 6;
  ::google::protobuf::uint64 size() const;
  void set_size(::google::protobuf::uint64 value);

  // required uint32 domain = 7;
  bool has_domain() const;
  void clear_domain();
  static const int kDomainFieldNumber = 7;
  ::google::protobuf::uint32 domain() const;
  void set_domain(::google::protobuf::uint32 value);

  // required uint32 range = 8;
  bool has_range() const;
  void clear_range();
  static const int kRangeFieldNumber = 8;
  ::google::protobuf::uint32 range() const;
  void set_range(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:klee.ProtoArray)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_size();
  void clear_has_size();
  void set_has_domain();
  void clear_has_domain();
  void set_has_range();
  void clear_has_range();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::klee::ProtoExpr > constantvalues_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint64 size_;
  ::google::protobuf::uint32 domain_;
  ::google::protobuf::uint32 range_;
  friend struct ::protobuf_Cache_2eproto::TableStruct;
  friend void ::protobuf_Cache_2eproto::InitDefaultsProtoArrayImpl();
};
// -------------------------------------------------------------------

class ProtoBitVector : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:klee.ProtoBitVector) */ {
 public:
  ProtoBitVector();
  virtual ~ProtoBitVector();

  ProtoBitVector(const ProtoBitVector& from);

  inline ProtoBitVector& operator=(const ProtoBitVector& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProtoBitVector(ProtoBitVector&& from) noexcept
    : ProtoBitVector() {
    *this = ::std::move(from);
  }

  inline ProtoBitVector& operator=(ProtoBitVector&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoBitVector& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProtoBitVector* internal_default_instance() {
    return reinterpret_cast<const ProtoBitVector*>(
               &_ProtoBitVector_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(ProtoBitVector* other);
  friend void swap(ProtoBitVector& a, ProtoBitVector& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProtoBitVector* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ProtoBitVector>(NULL);
  }

  ProtoBitVector* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ProtoBitVector>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ProtoBitVector& from);
  void MergeFrom(const ProtoBitVector& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ProtoBitVector* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed32 values = 10;
  int values_size() const;
  void clear_values();
  static const int kValuesFieldNumber = 10;
  ::google::protobuf::uint32 values(int index) const;
  void set_values(int index, ::google::protobuf::uint32 value);
  void add_values(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      values() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_values();

  // @@protoc_insertion_point(class_scope:klee.ProtoBitVector)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > values_;
  friend struct ::protobuf_Cache_2eproto::TableStruct;
  friend void ::protobuf_Cache_2eproto::InitDefaultsProtoBitVectorImpl();
};
// -------------------------------------------------------------------

class ProtoAssignment : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:klee.ProtoAssignment) */ {
 public:
  ProtoAssignment();
  virtual ~ProtoAssignment();

  ProtoAssignment(const ProtoAssignment& from);

  inline ProtoAssignment& operator=(const ProtoAssignment& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProtoAssignment(ProtoAssignment&& from) noexcept
    : ProtoAssignment() {
    *this = ::std::move(from);
  }

  inline ProtoAssignment& operator=(ProtoAssignment&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoAssignment& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProtoAssignment* internal_default_instance() {
    return reinterpret_cast<const ProtoAssignment*>(
               &_ProtoAssignment_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(ProtoAssignment* other);
  friend void swap(ProtoAssignment& a, ProtoAssignment& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProtoAssignment* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ProtoAssignment>(NULL);
  }

  ProtoAssignment* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ProtoAssignment>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ProtoAssignment& from);
  void MergeFrom(const ProtoAssignment& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ProtoAssignment* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .klee.ProtoArray objects = 2;
  int objects_size() const;
  void clear_objects();
  static const int kObjectsFieldNumber = 2;
  ::klee::ProtoArray* mutable_objects(int index);
  ::google::protobuf::RepeatedPtrField< ::klee::ProtoArray >*
      mutable_objects();
  const ::klee::ProtoArray& objects(int index) const;
  ::klee::ProtoArray* add_objects();
  const ::google::protobuf::RepeatedPtrField< ::klee::ProtoArray >&
      objects() const;

  // repeated .klee.ProtoBitVector bvs = 3;
  int bvs_size() const;
  void clear_bvs();
  static const int kBvsFieldNumber = 3;
  ::klee::ProtoBitVector* mutable_bvs(int index);
  ::google::protobuf::RepeatedPtrField< ::klee::ProtoBitVector >*
      mutable_bvs();
  const ::klee::ProtoBitVector& bvs(int index) const;
  ::klee::ProtoBitVector* add_bvs();
  const ::google::protobuf::RepeatedPtrField< ::klee::ProtoBitVector >&
      bvs() const;

  // optional bool allowFreeValues = 1;
  bool has_allowfreevalues() const;
  void clear_allowfreevalues();
  static const int kAllowFreeValuesFieldNumber = 1;
  bool allowfreevalues() const;
  void set_allowfreevalues(bool value);

  // required bool noBinding = 4;
  bool has_nobinding() const;
  void clear_nobinding();
  static const int kNoBindingFieldNumber = 4;
  bool nobinding() const;
  void set_nobinding(bool value);

  // @@protoc_insertion_point(class_scope:klee.ProtoAssignment)
 private:
  void set_has_allowfreevalues();
  void clear_has_allowfreevalues();
  void set_has_nobinding();
  void clear_has_nobinding();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::klee::ProtoArray > objects_;
  ::google::protobuf::RepeatedPtrField< ::klee::ProtoBitVector > bvs_;
  bool allowfreevalues_;
  bool nobinding_;
  friend struct ::protobuf_Cache_2eproto::TableStruct;
  friend void ::protobuf_Cache_2eproto::InitDefaultsProtoAssignmentImpl();
};
// -------------------------------------------------------------------

class ProtoConstExpr : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:klee.ProtoConstExpr) */ {
 public:
  ProtoConstExpr();
  virtual ~ProtoConstExpr();

  ProtoConstExpr(const ProtoConstExpr& from);

  inline ProtoConstExpr& operator=(const ProtoConstExpr& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProtoConstExpr(ProtoConstExpr&& from) noexcept
    : ProtoConstExpr() {
    *this = ::std::move(from);
  }

  inline ProtoConstExpr& operator=(ProtoConstExpr&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoConstExpr& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProtoConstExpr* internal_default_instance() {
    return reinterpret_cast<const ProtoConstExpr*>(
               &_ProtoConstExpr_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(ProtoConstExpr* other);
  friend void swap(ProtoConstExpr& a, ProtoConstExpr& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProtoConstExpr* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ProtoConstExpr>(NULL);
  }

  ProtoConstExpr* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ProtoConstExpr>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ProtoConstExpr& from);
  void MergeFrom(const ProtoConstExpr& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ProtoConstExpr* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 constExprVal = 12 [default = 0];
  bool has_constexprval() const;
  void clear_constexprval();
  static const int kConstExprValFieldNumber = 12;
  ::google::protobuf::uint64 constexprval() const;
  void set_constexprval(::google::protobuf::uint64 value);

  // optional uint32 constExprBWidth = 11 [default = 8];
  bool has_constexprbwidth() const;
  void clear_constexprbwidth();
  static const int kConstExprBWidthFieldNumber = 11;
  ::google::protobuf::uint32 constexprbwidth() const;
  void set_constexprbwidth(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:klee.ProtoConstExpr)
 private:
  void set_has_constexprbwidth();
  void clear_has_constexprbwidth();
  void set_has_constexprval();
  void clear_has_constexprval();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 constexprval_;
  ::google::protobuf::uint32 constexprbwidth_;
  friend struct ::protobuf_Cache_2eproto::TableStruct;
  friend void ::protobuf_Cache_2eproto::InitDefaultsProtoConstExprImpl();
};
// -------------------------------------------------------------------

class ProtoUpdateNode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:klee.ProtoUpdateNode) */ {
 public:
  ProtoUpdateNode();
  virtual ~ProtoUpdateNode();

  ProtoUpdateNode(const ProtoUpdateNode& from);

  inline ProtoUpdateNode& operator=(const ProtoUpdateNode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProtoUpdateNode(ProtoUpdateNode&& from) noexcept
    : ProtoUpdateNode() {
    *this = ::std::move(from);
  }

  inline ProtoUpdateNode& operator=(ProtoUpdateNode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoUpdateNode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProtoUpdateNode* internal_default_instance() {
    return reinterpret_cast<const ProtoUpdateNode*>(
               &_ProtoUpdateNode_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(ProtoUpdateNode* other);
  friend void swap(ProtoUpdateNode& a, ProtoUpdateNode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProtoUpdateNode* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ProtoUpdateNode>(NULL);
  }

  ProtoUpdateNode* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ProtoUpdateNode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ProtoUpdateNode& from);
  void MergeFrom(const ProtoUpdateNode& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ProtoUpdateNode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .klee.ProtoExpr updateIndex = 13;
  bool has_updateindex() const;
  void clear_updateindex();
  static const int kUpdateIndexFieldNumber = 13;
  const ::klee::ProtoExpr& updateindex() const;
  ::klee::ProtoExpr* release_updateindex();
  ::klee::ProtoExpr* mutable_updateindex();
  void set_allocated_updateindex(::klee::ProtoExpr* updateindex);

  // required .klee.ProtoExpr updateValue = 14;
  bool has_updatevalue() const;
  void clear_updatevalue();
  static const int kUpdateValueFieldNumber = 14;
  const ::klee::ProtoExpr& updatevalue() const;
  ::klee::ProtoExpr* release_updatevalue();
  ::klee::ProtoExpr* mutable_updatevalue();
  void set_allocated_updatevalue(::klee::ProtoExpr* updatevalue);

  // optional .klee.ProtoUpdateNode next = 15;
  bool has_next() const;
  void clear_next();
  static const int kNextFieldNumber = 15;
  const ::klee::ProtoUpdateNode& next() const;
  ::klee::ProtoUpdateNode* release_next();
  ::klee::ProtoUpdateNode* mutable_next();
  void set_allocated_next(::klee::ProtoUpdateNode* next);

  // @@protoc_insertion_point(class_scope:klee.ProtoUpdateNode)
 private:
  void set_has_updateindex();
  void clear_has_updateindex();
  void set_has_updatevalue();
  void clear_has_updatevalue();
  void set_has_next();
  void clear_has_next();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::klee::ProtoExpr* updateindex_;
  ::klee::ProtoExpr* updatevalue_;
  ::klee::ProtoUpdateNode* next_;
  friend struct ::protobuf_Cache_2eproto::TableStruct;
  friend void ::protobuf_Cache_2eproto::InitDefaultsProtoArrayImpl();
};
// -------------------------------------------------------------------

class ProtoReadExpr : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:klee.ProtoReadExpr) */ {
 public:
  ProtoReadExpr();
  virtual ~ProtoReadExpr();

  ProtoReadExpr(const ProtoReadExpr& from);

  inline ProtoReadExpr& operator=(const ProtoReadExpr& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProtoReadExpr(ProtoReadExpr&& from) noexcept
    : ProtoReadExpr() {
    *this = ::std::move(from);
  }

  inline ProtoReadExpr& operator=(ProtoReadExpr&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoReadExpr& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProtoReadExpr* internal_default_instance() {
    return reinterpret_cast<const ProtoReadExpr*>(
               &_ProtoReadExpr_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(ProtoReadExpr* other);
  friend void swap(ProtoReadExpr& a, ProtoReadExpr& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProtoReadExpr* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ProtoReadExpr>(NULL);
  }

  ProtoReadExpr* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ProtoReadExpr>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ProtoReadExpr& from);
  void MergeFrom(const ProtoReadExpr& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ProtoReadExpr* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .klee.ProtoUpdateNode head = 16;
  bool has_head() const;
  void clear_head();
  static const int kHeadFieldNumber = 16;
  const ::klee::ProtoUpdateNode& head() const;
  ::klee::ProtoUpdateNode* release_head();
  ::klee::ProtoUpdateNode* mutable_head();
  void set_allocated_head(::klee::ProtoUpdateNode* head);

  // required .klee.ProtoArray root = 17;
  bool has_root() const;
  void clear_root();
  static const int kRootFieldNumber = 17;
  const ::klee::ProtoArray& root() const;
  ::klee::ProtoArray* release_root();
  ::klee::ProtoArray* mutable_root();
  void set_allocated_root(::klee::ProtoArray* root);

  // required .klee.ProtoExpr expr = 18;
  bool has_expr() const;
  void clear_expr();
  static const int kExprFieldNumber = 18;
  const ::klee::ProtoExpr& expr() const;
  ::klee::ProtoExpr* release_expr();
  ::klee::ProtoExpr* mutable_expr();
  void set_allocated_expr(::klee::ProtoExpr* expr);

  // @@protoc_insertion_point(class_scope:klee.ProtoReadExpr)
 private:
  void set_has_head();
  void clear_has_head();
  void set_has_root();
  void clear_has_root();
  void set_has_expr();
  void clear_has_expr();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::klee::ProtoUpdateNode* head_;
  ::klee::ProtoArray* root_;
  ::klee::ProtoExpr* expr_;
  friend struct ::protobuf_Cache_2eproto::TableStruct;
  friend void ::protobuf_Cache_2eproto::InitDefaultsProtoArrayImpl();
};
// -------------------------------------------------------------------

class ProtoExtractExpr : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:klee.ProtoExtractExpr) */ {
 public:
  ProtoExtractExpr();
  virtual ~ProtoExtractExpr();

  ProtoExtractExpr(const ProtoExtractExpr& from);

  inline ProtoExtractExpr& operator=(const ProtoExtractExpr& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProtoExtractExpr(ProtoExtractExpr&& from) noexcept
    : ProtoExtractExpr() {
    *this = ::std::move(from);
  }

  inline ProtoExtractExpr& operator=(ProtoExtractExpr&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoExtractExpr& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProtoExtractExpr* internal_default_instance() {
    return reinterpret_cast<const ProtoExtractExpr*>(
               &_ProtoExtractExpr_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(ProtoExtractExpr* other);
  friend void swap(ProtoExtractExpr& a, ProtoExtractExpr& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProtoExtractExpr* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ProtoExtractExpr>(NULL);
  }

  ProtoExtractExpr* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ProtoExtractExpr>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ProtoExtractExpr& from);
  void MergeFrom(const ProtoExtractExpr& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ProtoExtractExpr* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .klee.ProtoExpr expr = 21;
  bool has_expr() const;
  void clear_expr();
  static const int kExprFieldNumber = 21;
  const ::klee::ProtoExpr& expr() const;
  ::klee::ProtoExpr* release_expr();
  ::klee::ProtoExpr* mutable_expr();
  void set_allocated_expr(::klee::ProtoExpr* expr);

  // required uint32 extractBitOff = 19;
  bool has_extractbitoff() const;
  void clear_extractbitoff();
  static const int kExtractBitOffFieldNumber = 19;
  ::google::protobuf::uint32 extractbitoff() const;
  void set_extractbitoff(::google::protobuf::uint32 value);

  // required uint32 extractWidth = 20;
  bool has_extractwidth() const;
  void clear_extractwidth();
  static const int kExtractWidthFieldNumber = 20;
  ::google::protobuf::uint32 extractwidth() const;
  void set_extractwidth(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:klee.ProtoExtractExpr)
 private:
  void set_has_extractbitoff();
  void clear_has_extractbitoff();
  void set_has_extractwidth();
  void clear_has_extractwidth();
  void set_has_expr();
  void clear_has_expr();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::klee::ProtoExpr* expr_;
  ::google::protobuf::uint32 extractbitoff_;
  ::google::protobuf::uint32 extractwidth_;
  friend struct ::protobuf_Cache_2eproto::TableStruct;
  friend void ::protobuf_Cache_2eproto::InitDefaultsProtoArrayImpl();
};
// -------------------------------------------------------------------

class ProtoNotOptimizedExpr : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:klee.ProtoNotOptimizedExpr) */ {
 public:
  ProtoNotOptimizedExpr();
  virtual ~ProtoNotOptimizedExpr();

  ProtoNotOptimizedExpr(const ProtoNotOptimizedExpr& from);

  inline ProtoNotOptimizedExpr& operator=(const ProtoNotOptimizedExpr& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProtoNotOptimizedExpr(ProtoNotOptimizedExpr&& from) noexcept
    : ProtoNotOptimizedExpr() {
    *this = ::std::move(from);
  }

  inline ProtoNotOptimizedExpr& operator=(ProtoNotOptimizedExpr&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoNotOptimizedExpr& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProtoNotOptimizedExpr* internal_default_instance() {
    return reinterpret_cast<const ProtoNotOptimizedExpr*>(
               &_ProtoNotOptimizedExpr_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(ProtoNotOptimizedExpr* other);
  friend void swap(ProtoNotOptimizedExpr& a, ProtoNotOptimizedExpr& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProtoNotOptimizedExpr* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ProtoNotOptimizedExpr>(NULL);
  }

  ProtoNotOptimizedExpr* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ProtoNotOptimizedExpr>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ProtoNotOptimizedExpr& from);
  void MergeFrom(const ProtoNotOptimizedExpr& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ProtoNotOptimizedExpr* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .klee.ProtoExpr src = 22;
  bool has_src() const;
  void clear_src();
  static const int kSrcFieldNumber = 22;
  const ::klee::ProtoExpr& src() const;
  ::klee::ProtoExpr* release_src();
  ::klee::ProtoExpr* mutable_src();
  void set_allocated_src(::klee::ProtoExpr* src);

  // @@protoc_insertion_point(class_scope:klee.ProtoNotOptimizedExpr)
 private:
  void set_has_src();
  void clear_has_src();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::klee::ProtoExpr* src_;
  friend struct ::protobuf_Cache_2eproto::TableStruct;
  friend void ::protobuf_Cache_2eproto::InitDefaultsProtoArrayImpl();
};
// -------------------------------------------------------------------

class ProtoExpr : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:klee.ProtoExpr) */ {
 public:
  ProtoExpr();
  virtual ~ProtoExpr();

  ProtoExpr(const ProtoExpr& from);

  inline ProtoExpr& operator=(const ProtoExpr& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProtoExpr(ProtoExpr&& from) noexcept
    : ProtoExpr() {
    *this = ::std::move(from);
  }

  inline ProtoExpr& operator=(ProtoExpr&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoExpr& default_instance();

  enum SpecialDataCase {
    kConstData = 7,
    kReadData = 8,
    kExtractData = 9,
    kNOData = 10,
    SPECIALDATA_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProtoExpr* internal_default_instance() {
    return reinterpret_cast<const ProtoExpr*>(
               &_ProtoExpr_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(ProtoExpr* other);
  friend void swap(ProtoExpr& a, ProtoExpr& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProtoExpr* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ProtoExpr>(NULL);
  }

  ProtoExpr* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ProtoExpr>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ProtoExpr& from);
  void MergeFrom(const ProtoExpr& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ProtoExpr* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .klee.ProtoExpr kids = 6;
  int kids_size() const;
  void clear_kids();
  static const int kKidsFieldNumber = 6;
  ::klee::ProtoExpr* mutable_kids(int index);
  ::google::protobuf::RepeatedPtrField< ::klee::ProtoExpr >*
      mutable_kids();
  const ::klee::ProtoExpr& kids(int index) const;
  ::klee::ProtoExpr* add_kids();
  const ::google::protobuf::RepeatedPtrField< ::klee::ProtoExpr >&
      kids() const;

  // optional uint32 kind = 2 [default = 0];
  bool has_kind() const;
  void clear_kind();
  static const int kKindFieldNumber = 2;
  ::google::protobuf::uint32 kind() const;
  void set_kind(::google::protobuf::uint32 value);

  // optional uint32 width = 1 [default = 8];
  bool has_width() const;
  void clear_width();
  static const int kWidthFieldNumber = 1;
  ::google::protobuf::uint32 width() const;
  void set_width(::google::protobuf::uint32 value);

  // optional .klee.ProtoConstExpr constData = 7;
  bool has_constdata() const;
  void clear_constdata();
  static const int kConstDataFieldNumber = 7;
  const ::klee::ProtoConstExpr& constdata() const;
  ::klee::ProtoConstExpr* release_constdata();
  ::klee::ProtoConstExpr* mutable_constdata();
  void set_allocated_constdata(::klee::ProtoConstExpr* constdata);

  // optional .klee.ProtoReadExpr readData = 8;
  bool has_readdata() const;
  void clear_readdata();
  static const int kReadDataFieldNumber = 8;
  const ::klee::ProtoReadExpr& readdata() const;
  ::klee::ProtoReadExpr* release_readdata();
  ::klee::ProtoReadExpr* mutable_readdata();
  void set_allocated_readdata(::klee::ProtoReadExpr* readdata);

  // optional .klee.ProtoExtractExpr extractData = 9;
  bool has_extractdata() const;
  void clear_extractdata();
  static const int kExtractDataFieldNumber = 9;
  const ::klee::ProtoExtractExpr& extractdata() const;
  ::klee::ProtoExtractExpr* release_extractdata();
  ::klee::ProtoExtractExpr* mutable_extractdata();
  void set_allocated_extractdata(::klee::ProtoExtractExpr* extractdata);

  // optional .klee.ProtoNotOptimizedExpr NOData = 10;
  bool has_nodata() const;
  void clear_nodata();
  static const int kNODataFieldNumber = 10;
  const ::klee::ProtoNotOptimizedExpr& nodata() const;
  ::klee::ProtoNotOptimizedExpr* release_nodata();
  ::klee::ProtoNotOptimizedExpr* mutable_nodata();
  void set_allocated_nodata(::klee::ProtoNotOptimizedExpr* nodata);

  SpecialDataCase specialData_case() const;
  // @@protoc_insertion_point(class_scope:klee.ProtoExpr)
 private:
  void set_has_width();
  void clear_has_width();
  void set_has_kind();
  void clear_has_kind();
  void set_has_constdata();
  void set_has_readdata();
  void set_has_extractdata();
  void set_has_nodata();

  inline bool has_specialData() const;
  void clear_specialData();
  inline void clear_has_specialData();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::klee::ProtoExpr > kids_;
  ::google::protobuf::uint32 kind_;
  ::google::protobuf::uint32 width_;
  union SpecialDataUnion {
    SpecialDataUnion() {}
    ::klee::ProtoConstExpr* constdata_;
    ::klee::ProtoReadExpr* readdata_;
    ::klee::ProtoExtractExpr* extractdata_;
    ::klee::ProtoNotOptimizedExpr* nodata_;
  } specialData_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_Cache_2eproto::TableStruct;
  friend void ::protobuf_Cache_2eproto::InitDefaultsProtoArrayImpl();
};
// -------------------------------------------------------------------

class ProtoCacheElem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:klee.ProtoCacheElem) */ {
 public:
  ProtoCacheElem();
  virtual ~ProtoCacheElem();

  ProtoCacheElem(const ProtoCacheElem& from);

  inline ProtoCacheElem& operator=(const ProtoCacheElem& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProtoCacheElem(ProtoCacheElem&& from) noexcept
    : ProtoCacheElem() {
    *this = ::std::move(from);
  }

  inline ProtoCacheElem& operator=(ProtoCacheElem&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoCacheElem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProtoCacheElem* internal_default_instance() {
    return reinterpret_cast<const ProtoCacheElem*>(
               &_ProtoCacheElem_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(ProtoCacheElem* other);
  friend void swap(ProtoCacheElem& a, ProtoCacheElem& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProtoCacheElem* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ProtoCacheElem>(NULL);
  }

  ProtoCacheElem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ProtoCacheElem>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ProtoCacheElem& from);
  void MergeFrom(const ProtoCacheElem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ProtoCacheElem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .klee.ProtoExpr key = 1;
  int key_size() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  ::klee::ProtoExpr* mutable_key(int index);
  ::google::protobuf::RepeatedPtrField< ::klee::ProtoExpr >*
      mutable_key();
  const ::klee::ProtoExpr& key(int index) const;
  ::klee::ProtoExpr* add_key();
  const ::google::protobuf::RepeatedPtrField< ::klee::ProtoExpr >&
      key() const;

  // optional .klee.ProtoAssignment assignment = 2;
  bool has_assignment() const;
  void clear_assignment();
  static const int kAssignmentFieldNumber = 2;
  const ::klee::ProtoAssignment& assignment() const;
  ::klee::ProtoAssignment* release_assignment();
  ::klee::ProtoAssignment* mutable_assignment();
  void set_allocated_assignment(::klee::ProtoAssignment* assignment);

  // @@protoc_insertion_point(class_scope:klee.ProtoCacheElem)
 private:
  void set_has_assignment();
  void clear_has_assignment();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::klee::ProtoExpr > key_;
  ::klee::ProtoAssignment* assignment_;
  friend struct ::protobuf_Cache_2eproto::TableStruct;
  friend void ::protobuf_Cache_2eproto::InitDefaultsProtoCacheElemImpl();
};
// -------------------------------------------------------------------

class ProtoCache : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:klee.ProtoCache) */ {
 public:
  ProtoCache();
  virtual ~ProtoCache();

  ProtoCache(const ProtoCache& from);

  inline ProtoCache& operator=(const ProtoCache& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProtoCache(ProtoCache&& from) noexcept
    : ProtoCache() {
    *this = ::std::move(from);
  }

  inline ProtoCache& operator=(ProtoCache&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoCache& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProtoCache* internal_default_instance() {
    return reinterpret_cast<const ProtoCache*>(
               &_ProtoCache_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(ProtoCache* other);
  friend void swap(ProtoCache& a, ProtoCache& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProtoCache* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ProtoCache>(NULL);
  }

  ProtoCache* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ProtoCache>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ProtoCache& from);
  void MergeFrom(const ProtoCache& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ProtoCache* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .klee.ProtoCacheElem elem = 1;
  int elem_size() const;
  void clear_elem();
  static const int kElemFieldNumber = 1;
  ::klee::ProtoCacheElem* mutable_elem(int index);
  ::google::protobuf::RepeatedPtrField< ::klee::ProtoCacheElem >*
      mutable_elem();
  const ::klee::ProtoCacheElem& elem(int index) const;
  ::klee::ProtoCacheElem* add_elem();
  const ::google::protobuf::RepeatedPtrField< ::klee::ProtoCacheElem >&
      elem() const;

  // @@protoc_insertion_point(class_scope:klee.ProtoCache)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::klee::ProtoCacheElem > elem_;
  friend struct ::protobuf_Cache_2eproto::TableStruct;
  friend void ::protobuf_Cache_2eproto::InitDefaultsProtoCacheImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ProtoArray

// required string name = 5;
inline bool ProtoArray::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoArray::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoArray::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoArray::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& ProtoArray::name() const {
  // @@protoc_insertion_point(field_get:klee.ProtoArray.name)
  return name_.GetNoArena();
}
inline void ProtoArray::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:klee.ProtoArray.name)
}
#if LANG_CXX11
inline void ProtoArray::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:klee.ProtoArray.name)
}
#endif
inline void ProtoArray::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:klee.ProtoArray.name)
}
inline void ProtoArray::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:klee.ProtoArray.name)
}
inline ::std::string* ProtoArray::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:klee.ProtoArray.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProtoArray::release_name() {
  // @@protoc_insertion_point(field_release:klee.ProtoArray.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtoArray::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:klee.ProtoArray.name)
}

// required uint64 size = 6;
inline bool ProtoArray::has_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoArray::set_has_size() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoArray::clear_has_size() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoArray::clear_size() {
  size_ = GOOGLE_ULONGLONG(0);
  clear_has_size();
}
inline ::google::protobuf::uint64 ProtoArray::size() const {
  // @@protoc_insertion_point(field_get:klee.ProtoArray.size)
  return size_;
}
inline void ProtoArray::set_size(::google::protobuf::uint64 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:klee.ProtoArray.size)
}

// required uint32 domain = 7;
inline bool ProtoArray::has_domain() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtoArray::set_has_domain() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProtoArray::clear_has_domain() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProtoArray::clear_domain() {
  domain_ = 0u;
  clear_has_domain();
}
inline ::google::protobuf::uint32 ProtoArray::domain() const {
  // @@protoc_insertion_point(field_get:klee.ProtoArray.domain)
  return domain_;
}
inline void ProtoArray::set_domain(::google::protobuf::uint32 value) {
  set_has_domain();
  domain_ = value;
  // @@protoc_insertion_point(field_set:klee.ProtoArray.domain)
}

// required uint32 range = 8;
inline bool ProtoArray::has_range() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProtoArray::set_has_range() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProtoArray::clear_has_range() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProtoArray::clear_range() {
  range_ = 0u;
  clear_has_range();
}
inline ::google::protobuf::uint32 ProtoArray::range() const {
  // @@protoc_insertion_point(field_get:klee.ProtoArray.range)
  return range_;
}
inline void ProtoArray::set_range(::google::protobuf::uint32 value) {
  set_has_range();
  range_ = value;
  // @@protoc_insertion_point(field_set:klee.ProtoArray.range)
}

// repeated .klee.ProtoExpr constantValues = 9;
inline int ProtoArray::constantvalues_size() const {
  return constantvalues_.size();
}
inline void ProtoArray::clear_constantvalues() {
  constantvalues_.Clear();
}
inline ::klee::ProtoExpr* ProtoArray::mutable_constantvalues(int index) {
  // @@protoc_insertion_point(field_mutable:klee.ProtoArray.constantValues)
  return constantvalues_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::klee::ProtoExpr >*
ProtoArray::mutable_constantvalues() {
  // @@protoc_insertion_point(field_mutable_list:klee.ProtoArray.constantValues)
  return &constantvalues_;
}
inline const ::klee::ProtoExpr& ProtoArray::constantvalues(int index) const {
  // @@protoc_insertion_point(field_get:klee.ProtoArray.constantValues)
  return constantvalues_.Get(index);
}
inline ::klee::ProtoExpr* ProtoArray::add_constantvalues() {
  // @@protoc_insertion_point(field_add:klee.ProtoArray.constantValues)
  return constantvalues_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::klee::ProtoExpr >&
ProtoArray::constantvalues() const {
  // @@protoc_insertion_point(field_list:klee.ProtoArray.constantValues)
  return constantvalues_;
}

// -------------------------------------------------------------------

// ProtoBitVector

// repeated fixed32 values = 10;
inline int ProtoBitVector::values_size() const {
  return values_.size();
}
inline void ProtoBitVector::clear_values() {
  values_.Clear();
}
inline ::google::protobuf::uint32 ProtoBitVector::values(int index) const {
  // @@protoc_insertion_point(field_get:klee.ProtoBitVector.values)
  return values_.Get(index);
}
inline void ProtoBitVector::set_values(int index, ::google::protobuf::uint32 value) {
  values_.Set(index, value);
  // @@protoc_insertion_point(field_set:klee.ProtoBitVector.values)
}
inline void ProtoBitVector::add_values(::google::protobuf::uint32 value) {
  values_.Add(value);
  // @@protoc_insertion_point(field_add:klee.ProtoBitVector.values)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ProtoBitVector::values() const {
  // @@protoc_insertion_point(field_list:klee.ProtoBitVector.values)
  return values_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ProtoBitVector::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:klee.ProtoBitVector.values)
  return &values_;
}

// -------------------------------------------------------------------

// ProtoAssignment

// optional bool allowFreeValues = 1;
inline bool ProtoAssignment::has_allowfreevalues() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoAssignment::set_has_allowfreevalues() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoAssignment::clear_has_allowfreevalues() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoAssignment::clear_allowfreevalues() {
  allowfreevalues_ = false;
  clear_has_allowfreevalues();
}
inline bool ProtoAssignment::allowfreevalues() const {
  // @@protoc_insertion_point(field_get:klee.ProtoAssignment.allowFreeValues)
  return allowfreevalues_;
}
inline void ProtoAssignment::set_allowfreevalues(bool value) {
  set_has_allowfreevalues();
  allowfreevalues_ = value;
  // @@protoc_insertion_point(field_set:klee.ProtoAssignment.allowFreeValues)
}

// repeated .klee.ProtoArray objects = 2;
inline int ProtoAssignment::objects_size() const {
  return objects_.size();
}
inline void ProtoAssignment::clear_objects() {
  objects_.Clear();
}
inline ::klee::ProtoArray* ProtoAssignment::mutable_objects(int index) {
  // @@protoc_insertion_point(field_mutable:klee.ProtoAssignment.objects)
  return objects_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::klee::ProtoArray >*
ProtoAssignment::mutable_objects() {
  // @@protoc_insertion_point(field_mutable_list:klee.ProtoAssignment.objects)
  return &objects_;
}
inline const ::klee::ProtoArray& ProtoAssignment::objects(int index) const {
  // @@protoc_insertion_point(field_get:klee.ProtoAssignment.objects)
  return objects_.Get(index);
}
inline ::klee::ProtoArray* ProtoAssignment::add_objects() {
  // @@protoc_insertion_point(field_add:klee.ProtoAssignment.objects)
  return objects_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::klee::ProtoArray >&
ProtoAssignment::objects() const {
  // @@protoc_insertion_point(field_list:klee.ProtoAssignment.objects)
  return objects_;
}

// repeated .klee.ProtoBitVector bvs = 3;
inline int ProtoAssignment::bvs_size() const {
  return bvs_.size();
}
inline void ProtoAssignment::clear_bvs() {
  bvs_.Clear();
}
inline ::klee::ProtoBitVector* ProtoAssignment::mutable_bvs(int index) {
  // @@protoc_insertion_point(field_mutable:klee.ProtoAssignment.bvs)
  return bvs_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::klee::ProtoBitVector >*
ProtoAssignment::mutable_bvs() {
  // @@protoc_insertion_point(field_mutable_list:klee.ProtoAssignment.bvs)
  return &bvs_;
}
inline const ::klee::ProtoBitVector& ProtoAssignment::bvs(int index) const {
  // @@protoc_insertion_point(field_get:klee.ProtoAssignment.bvs)
  return bvs_.Get(index);
}
inline ::klee::ProtoBitVector* ProtoAssignment::add_bvs() {
  // @@protoc_insertion_point(field_add:klee.ProtoAssignment.bvs)
  return bvs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::klee::ProtoBitVector >&
ProtoAssignment::bvs() const {
  // @@protoc_insertion_point(field_list:klee.ProtoAssignment.bvs)
  return bvs_;
}

// required bool noBinding = 4;
inline bool ProtoAssignment::has_nobinding() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoAssignment::set_has_nobinding() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoAssignment::clear_has_nobinding() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoAssignment::clear_nobinding() {
  nobinding_ = false;
  clear_has_nobinding();
}
inline bool ProtoAssignment::nobinding() const {
  // @@protoc_insertion_point(field_get:klee.ProtoAssignment.noBinding)
  return nobinding_;
}
inline void ProtoAssignment::set_nobinding(bool value) {
  set_has_nobinding();
  nobinding_ = value;
  // @@protoc_insertion_point(field_set:klee.ProtoAssignment.noBinding)
}

// -------------------------------------------------------------------

// ProtoConstExpr

// optional uint32 constExprBWidth = 11 [default = 8];
inline bool ProtoConstExpr::has_constexprbwidth() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoConstExpr::set_has_constexprbwidth() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoConstExpr::clear_has_constexprbwidth() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoConstExpr::clear_constexprbwidth() {
  constexprbwidth_ = 8u;
  clear_has_constexprbwidth();
}
inline ::google::protobuf::uint32 ProtoConstExpr::constexprbwidth() const {
  // @@protoc_insertion_point(field_get:klee.ProtoConstExpr.constExprBWidth)
  return constexprbwidth_;
}
inline void ProtoConstExpr::set_constexprbwidth(::google::protobuf::uint32 value) {
  set_has_constexprbwidth();
  constexprbwidth_ = value;
  // @@protoc_insertion_point(field_set:klee.ProtoConstExpr.constExprBWidth)
}

// optional uint64 constExprVal = 12 [default = 0];
inline bool ProtoConstExpr::has_constexprval() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoConstExpr::set_has_constexprval() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoConstExpr::clear_has_constexprval() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoConstExpr::clear_constexprval() {
  constexprval_ = GOOGLE_ULONGLONG(0);
  clear_has_constexprval();
}
inline ::google::protobuf::uint64 ProtoConstExpr::constexprval() const {
  // @@protoc_insertion_point(field_get:klee.ProtoConstExpr.constExprVal)
  return constexprval_;
}
inline void ProtoConstExpr::set_constexprval(::google::protobuf::uint64 value) {
  set_has_constexprval();
  constexprval_ = value;
  // @@protoc_insertion_point(field_set:klee.ProtoConstExpr.constExprVal)
}

// -------------------------------------------------------------------

// ProtoUpdateNode

// required .klee.ProtoExpr updateIndex = 13;
inline bool ProtoUpdateNode::has_updateindex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoUpdateNode::set_has_updateindex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoUpdateNode::clear_has_updateindex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoUpdateNode::clear_updateindex() {
  if (updateindex_ != NULL) updateindex_->Clear();
  clear_has_updateindex();
}
inline const ::klee::ProtoExpr& ProtoUpdateNode::updateindex() const {
  const ::klee::ProtoExpr* p = updateindex_;
  // @@protoc_insertion_point(field_get:klee.ProtoUpdateNode.updateIndex)
  return p != NULL ? *p : *reinterpret_cast<const ::klee::ProtoExpr*>(
      &::klee::_ProtoExpr_default_instance_);
}
inline ::klee::ProtoExpr* ProtoUpdateNode::release_updateindex() {
  // @@protoc_insertion_point(field_release:klee.ProtoUpdateNode.updateIndex)
  clear_has_updateindex();
  ::klee::ProtoExpr* temp = updateindex_;
  updateindex_ = NULL;
  return temp;
}
inline ::klee::ProtoExpr* ProtoUpdateNode::mutable_updateindex() {
  set_has_updateindex();
  if (updateindex_ == NULL) {
    updateindex_ = ::google::protobuf::Arena::Create< ::klee::ProtoExpr >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:klee.ProtoUpdateNode.updateIndex)
  return updateindex_;
}
inline void ProtoUpdateNode::set_allocated_updateindex(::klee::ProtoExpr* updateindex) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete updateindex_;
  }
  if (updateindex) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      updateindex = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, updateindex, submessage_arena);
    }
    set_has_updateindex();
  } else {
    clear_has_updateindex();
  }
  updateindex_ = updateindex;
  // @@protoc_insertion_point(field_set_allocated:klee.ProtoUpdateNode.updateIndex)
}

// required .klee.ProtoExpr updateValue = 14;
inline bool ProtoUpdateNode::has_updatevalue() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoUpdateNode::set_has_updatevalue() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoUpdateNode::clear_has_updatevalue() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoUpdateNode::clear_updatevalue() {
  if (updatevalue_ != NULL) updatevalue_->Clear();
  clear_has_updatevalue();
}
inline const ::klee::ProtoExpr& ProtoUpdateNode::updatevalue() const {
  const ::klee::ProtoExpr* p = updatevalue_;
  // @@protoc_insertion_point(field_get:klee.ProtoUpdateNode.updateValue)
  return p != NULL ? *p : *reinterpret_cast<const ::klee::ProtoExpr*>(
      &::klee::_ProtoExpr_default_instance_);
}
inline ::klee::ProtoExpr* ProtoUpdateNode::release_updatevalue() {
  // @@protoc_insertion_point(field_release:klee.ProtoUpdateNode.updateValue)
  clear_has_updatevalue();
  ::klee::ProtoExpr* temp = updatevalue_;
  updatevalue_ = NULL;
  return temp;
}
inline ::klee::ProtoExpr* ProtoUpdateNode::mutable_updatevalue() {
  set_has_updatevalue();
  if (updatevalue_ == NULL) {
    updatevalue_ = ::google::protobuf::Arena::Create< ::klee::ProtoExpr >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:klee.ProtoUpdateNode.updateValue)
  return updatevalue_;
}
inline void ProtoUpdateNode::set_allocated_updatevalue(::klee::ProtoExpr* updatevalue) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete updatevalue_;
  }
  if (updatevalue) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      updatevalue = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, updatevalue, submessage_arena);
    }
    set_has_updatevalue();
  } else {
    clear_has_updatevalue();
  }
  updatevalue_ = updatevalue;
  // @@protoc_insertion_point(field_set_allocated:klee.ProtoUpdateNode.updateValue)
}

// optional .klee.ProtoUpdateNode next = 15;
inline bool ProtoUpdateNode::has_next() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtoUpdateNode::set_has_next() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProtoUpdateNode::clear_has_next() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProtoUpdateNode::clear_next() {
  if (next_ != NULL) next_->Clear();
  clear_has_next();
}
inline const ::klee::ProtoUpdateNode& ProtoUpdateNode::next() const {
  const ::klee::ProtoUpdateNode* p = next_;
  // @@protoc_insertion_point(field_get:klee.ProtoUpdateNode.next)
  return p != NULL ? *p : *reinterpret_cast<const ::klee::ProtoUpdateNode*>(
      &::klee::_ProtoUpdateNode_default_instance_);
}
inline ::klee::ProtoUpdateNode* ProtoUpdateNode::release_next() {
  // @@protoc_insertion_point(field_release:klee.ProtoUpdateNode.next)
  clear_has_next();
  ::klee::ProtoUpdateNode* temp = next_;
  next_ = NULL;
  return temp;
}
inline ::klee::ProtoUpdateNode* ProtoUpdateNode::mutable_next() {
  set_has_next();
  if (next_ == NULL) {
    next_ = ::google::protobuf::Arena::Create< ::klee::ProtoUpdateNode >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:klee.ProtoUpdateNode.next)
  return next_;
}
inline void ProtoUpdateNode::set_allocated_next(::klee::ProtoUpdateNode* next) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete next_;
  }
  if (next) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      next = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, next, submessage_arena);
    }
    set_has_next();
  } else {
    clear_has_next();
  }
  next_ = next;
  // @@protoc_insertion_point(field_set_allocated:klee.ProtoUpdateNode.next)
}

// -------------------------------------------------------------------

// ProtoReadExpr

// optional .klee.ProtoUpdateNode head = 16;
inline bool ProtoReadExpr::has_head() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoReadExpr::set_has_head() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoReadExpr::clear_has_head() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoReadExpr::clear_head() {
  if (head_ != NULL) head_->Clear();
  clear_has_head();
}
inline const ::klee::ProtoUpdateNode& ProtoReadExpr::head() const {
  const ::klee::ProtoUpdateNode* p = head_;
  // @@protoc_insertion_point(field_get:klee.ProtoReadExpr.head)
  return p != NULL ? *p : *reinterpret_cast<const ::klee::ProtoUpdateNode*>(
      &::klee::_ProtoUpdateNode_default_instance_);
}
inline ::klee::ProtoUpdateNode* ProtoReadExpr::release_head() {
  // @@protoc_insertion_point(field_release:klee.ProtoReadExpr.head)
  clear_has_head();
  ::klee::ProtoUpdateNode* temp = head_;
  head_ = NULL;
  return temp;
}
inline ::klee::ProtoUpdateNode* ProtoReadExpr::mutable_head() {
  set_has_head();
  if (head_ == NULL) {
    head_ = ::google::protobuf::Arena::Create< ::klee::ProtoUpdateNode >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:klee.ProtoReadExpr.head)
  return head_;
}
inline void ProtoReadExpr::set_allocated_head(::klee::ProtoUpdateNode* head) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete head_;
  }
  if (head) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      head = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, head, submessage_arena);
    }
    set_has_head();
  } else {
    clear_has_head();
  }
  head_ = head;
  // @@protoc_insertion_point(field_set_allocated:klee.ProtoReadExpr.head)
}

// required .klee.ProtoArray root = 17;
inline bool ProtoReadExpr::has_root() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoReadExpr::set_has_root() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoReadExpr::clear_has_root() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoReadExpr::clear_root() {
  if (root_ != NULL) root_->Clear();
  clear_has_root();
}
inline const ::klee::ProtoArray& ProtoReadExpr::root() const {
  const ::klee::ProtoArray* p = root_;
  // @@protoc_insertion_point(field_get:klee.ProtoReadExpr.root)
  return p != NULL ? *p : *reinterpret_cast<const ::klee::ProtoArray*>(
      &::klee::_ProtoArray_default_instance_);
}
inline ::klee::ProtoArray* ProtoReadExpr::release_root() {
  // @@protoc_insertion_point(field_release:klee.ProtoReadExpr.root)
  clear_has_root();
  ::klee::ProtoArray* temp = root_;
  root_ = NULL;
  return temp;
}
inline ::klee::ProtoArray* ProtoReadExpr::mutable_root() {
  set_has_root();
  if (root_ == NULL) {
    root_ = ::google::protobuf::Arena::Create< ::klee::ProtoArray >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:klee.ProtoReadExpr.root)
  return root_;
}
inline void ProtoReadExpr::set_allocated_root(::klee::ProtoArray* root) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete root_;
  }
  if (root) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      root = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, root, submessage_arena);
    }
    set_has_root();
  } else {
    clear_has_root();
  }
  root_ = root;
  // @@protoc_insertion_point(field_set_allocated:klee.ProtoReadExpr.root)
}

// required .klee.ProtoExpr expr = 18;
inline bool ProtoReadExpr::has_expr() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtoReadExpr::set_has_expr() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProtoReadExpr::clear_has_expr() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProtoReadExpr::clear_expr() {
  if (expr_ != NULL) expr_->Clear();
  clear_has_expr();
}
inline const ::klee::ProtoExpr& ProtoReadExpr::expr() const {
  const ::klee::ProtoExpr* p = expr_;
  // @@protoc_insertion_point(field_get:klee.ProtoReadExpr.expr)
  return p != NULL ? *p : *reinterpret_cast<const ::klee::ProtoExpr*>(
      &::klee::_ProtoExpr_default_instance_);
}
inline ::klee::ProtoExpr* ProtoReadExpr::release_expr() {
  // @@protoc_insertion_point(field_release:klee.ProtoReadExpr.expr)
  clear_has_expr();
  ::klee::ProtoExpr* temp = expr_;
  expr_ = NULL;
  return temp;
}
inline ::klee::ProtoExpr* ProtoReadExpr::mutable_expr() {
  set_has_expr();
  if (expr_ == NULL) {
    expr_ = ::google::protobuf::Arena::Create< ::klee::ProtoExpr >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:klee.ProtoReadExpr.expr)
  return expr_;
}
inline void ProtoReadExpr::set_allocated_expr(::klee::ProtoExpr* expr) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete expr_;
  }
  if (expr) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      expr = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, expr, submessage_arena);
    }
    set_has_expr();
  } else {
    clear_has_expr();
  }
  expr_ = expr;
  // @@protoc_insertion_point(field_set_allocated:klee.ProtoReadExpr.expr)
}

// -------------------------------------------------------------------

// ProtoExtractExpr

// required uint32 extractBitOff = 19;
inline bool ProtoExtractExpr::has_extractbitoff() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoExtractExpr::set_has_extractbitoff() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoExtractExpr::clear_has_extractbitoff() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoExtractExpr::clear_extractbitoff() {
  extractbitoff_ = 0u;
  clear_has_extractbitoff();
}
inline ::google::protobuf::uint32 ProtoExtractExpr::extractbitoff() const {
  // @@protoc_insertion_point(field_get:klee.ProtoExtractExpr.extractBitOff)
  return extractbitoff_;
}
inline void ProtoExtractExpr::set_extractbitoff(::google::protobuf::uint32 value) {
  set_has_extractbitoff();
  extractbitoff_ = value;
  // @@protoc_insertion_point(field_set:klee.ProtoExtractExpr.extractBitOff)
}

// required uint32 extractWidth = 20;
inline bool ProtoExtractExpr::has_extractwidth() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtoExtractExpr::set_has_extractwidth() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProtoExtractExpr::clear_has_extractwidth() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProtoExtractExpr::clear_extractwidth() {
  extractwidth_ = 0u;
  clear_has_extractwidth();
}
inline ::google::protobuf::uint32 ProtoExtractExpr::extractwidth() const {
  // @@protoc_insertion_point(field_get:klee.ProtoExtractExpr.extractWidth)
  return extractwidth_;
}
inline void ProtoExtractExpr::set_extractwidth(::google::protobuf::uint32 value) {
  set_has_extractwidth();
  extractwidth_ = value;
  // @@protoc_insertion_point(field_set:klee.ProtoExtractExpr.extractWidth)
}

// required .klee.ProtoExpr expr = 21;
inline bool ProtoExtractExpr::has_expr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoExtractExpr::set_has_expr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoExtractExpr::clear_has_expr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoExtractExpr::clear_expr() {
  if (expr_ != NULL) expr_->Clear();
  clear_has_expr();
}
inline const ::klee::ProtoExpr& ProtoExtractExpr::expr() const {
  const ::klee::ProtoExpr* p = expr_;
  // @@protoc_insertion_point(field_get:klee.ProtoExtractExpr.expr)
  return p != NULL ? *p : *reinterpret_cast<const ::klee::ProtoExpr*>(
      &::klee::_ProtoExpr_default_instance_);
}
inline ::klee::ProtoExpr* ProtoExtractExpr::release_expr() {
  // @@protoc_insertion_point(field_release:klee.ProtoExtractExpr.expr)
  clear_has_expr();
  ::klee::ProtoExpr* temp = expr_;
  expr_ = NULL;
  return temp;
}
inline ::klee::ProtoExpr* ProtoExtractExpr::mutable_expr() {
  set_has_expr();
  if (expr_ == NULL) {
    expr_ = ::google::protobuf::Arena::Create< ::klee::ProtoExpr >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:klee.ProtoExtractExpr.expr)
  return expr_;
}
inline void ProtoExtractExpr::set_allocated_expr(::klee::ProtoExpr* expr) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete expr_;
  }
  if (expr) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      expr = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, expr, submessage_arena);
    }
    set_has_expr();
  } else {
    clear_has_expr();
  }
  expr_ = expr;
  // @@protoc_insertion_point(field_set_allocated:klee.ProtoExtractExpr.expr)
}

// -------------------------------------------------------------------

// ProtoNotOptimizedExpr

// required .klee.ProtoExpr src = 22;
inline bool ProtoNotOptimizedExpr::has_src() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoNotOptimizedExpr::set_has_src() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoNotOptimizedExpr::clear_has_src() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoNotOptimizedExpr::clear_src() {
  if (src_ != NULL) src_->Clear();
  clear_has_src();
}
inline const ::klee::ProtoExpr& ProtoNotOptimizedExpr::src() const {
  const ::klee::ProtoExpr* p = src_;
  // @@protoc_insertion_point(field_get:klee.ProtoNotOptimizedExpr.src)
  return p != NULL ? *p : *reinterpret_cast<const ::klee::ProtoExpr*>(
      &::klee::_ProtoExpr_default_instance_);
}
inline ::klee::ProtoExpr* ProtoNotOptimizedExpr::release_src() {
  // @@protoc_insertion_point(field_release:klee.ProtoNotOptimizedExpr.src)
  clear_has_src();
  ::klee::ProtoExpr* temp = src_;
  src_ = NULL;
  return temp;
}
inline ::klee::ProtoExpr* ProtoNotOptimizedExpr::mutable_src() {
  set_has_src();
  if (src_ == NULL) {
    src_ = ::google::protobuf::Arena::Create< ::klee::ProtoExpr >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:klee.ProtoNotOptimizedExpr.src)
  return src_;
}
inline void ProtoNotOptimizedExpr::set_allocated_src(::klee::ProtoExpr* src) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete src_;
  }
  if (src) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      src = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, src, submessage_arena);
    }
    set_has_src();
  } else {
    clear_has_src();
  }
  src_ = src;
  // @@protoc_insertion_point(field_set_allocated:klee.ProtoNotOptimizedExpr.src)
}

// -------------------------------------------------------------------

// ProtoExpr

// optional uint32 width = 1 [default = 8];
inline bool ProtoExpr::has_width() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoExpr::set_has_width() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoExpr::clear_has_width() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoExpr::clear_width() {
  width_ = 8u;
  clear_has_width();
}
inline ::google::protobuf::uint32 ProtoExpr::width() const {
  // @@protoc_insertion_point(field_get:klee.ProtoExpr.width)
  return width_;
}
inline void ProtoExpr::set_width(::google::protobuf::uint32 value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:klee.ProtoExpr.width)
}

// optional uint32 kind = 2 [default = 0];
inline bool ProtoExpr::has_kind() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoExpr::set_has_kind() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoExpr::clear_has_kind() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoExpr::clear_kind() {
  kind_ = 0u;
  clear_has_kind();
}
inline ::google::protobuf::uint32 ProtoExpr::kind() const {
  // @@protoc_insertion_point(field_get:klee.ProtoExpr.kind)
  return kind_;
}
inline void ProtoExpr::set_kind(::google::protobuf::uint32 value) {
  set_has_kind();
  kind_ = value;
  // @@protoc_insertion_point(field_set:klee.ProtoExpr.kind)
}

// repeated .klee.ProtoExpr kids = 6;
inline int ProtoExpr::kids_size() const {
  return kids_.size();
}
inline void ProtoExpr::clear_kids() {
  kids_.Clear();
}
inline ::klee::ProtoExpr* ProtoExpr::mutable_kids(int index) {
  // @@protoc_insertion_point(field_mutable:klee.ProtoExpr.kids)
  return kids_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::klee::ProtoExpr >*
ProtoExpr::mutable_kids() {
  // @@protoc_insertion_point(field_mutable_list:klee.ProtoExpr.kids)
  return &kids_;
}
inline const ::klee::ProtoExpr& ProtoExpr::kids(int index) const {
  // @@protoc_insertion_point(field_get:klee.ProtoExpr.kids)
  return kids_.Get(index);
}
inline ::klee::ProtoExpr* ProtoExpr::add_kids() {
  // @@protoc_insertion_point(field_add:klee.ProtoExpr.kids)
  return kids_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::klee::ProtoExpr >&
ProtoExpr::kids() const {
  // @@protoc_insertion_point(field_list:klee.ProtoExpr.kids)
  return kids_;
}

// optional .klee.ProtoConstExpr constData = 7;
inline bool ProtoExpr::has_constdata() const {
  return specialData_case() == kConstData;
}
inline void ProtoExpr::set_has_constdata() {
  _oneof_case_[0] = kConstData;
}
inline void ProtoExpr::clear_constdata() {
  if (has_constdata()) {
    delete specialData_.constdata_;
    clear_has_specialData();
  }
}
inline ::klee::ProtoConstExpr* ProtoExpr::release_constdata() {
  // @@protoc_insertion_point(field_release:klee.ProtoExpr.constData)
  if (has_constdata()) {
    clear_has_specialData();
      ::klee::ProtoConstExpr* temp = specialData_.constdata_;
    specialData_.constdata_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::klee::ProtoConstExpr& ProtoExpr::constdata() const {
  // @@protoc_insertion_point(field_get:klee.ProtoExpr.constData)
  return has_constdata()
      ? *specialData_.constdata_
      : *reinterpret_cast< ::klee::ProtoConstExpr*>(&::klee::_ProtoConstExpr_default_instance_);
}
inline ::klee::ProtoConstExpr* ProtoExpr::mutable_constdata() {
  if (!has_constdata()) {
    clear_specialData();
    set_has_constdata();
    specialData_.constdata_ = ::google::protobuf::Arena::Create< ::klee::ProtoConstExpr >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:klee.ProtoExpr.constData)
  return specialData_.constdata_;
}

// optional .klee.ProtoReadExpr readData = 8;
inline bool ProtoExpr::has_readdata() const {
  return specialData_case() == kReadData;
}
inline void ProtoExpr::set_has_readdata() {
  _oneof_case_[0] = kReadData;
}
inline void ProtoExpr::clear_readdata() {
  if (has_readdata()) {
    delete specialData_.readdata_;
    clear_has_specialData();
  }
}
inline ::klee::ProtoReadExpr* ProtoExpr::release_readdata() {
  // @@protoc_insertion_point(field_release:klee.ProtoExpr.readData)
  if (has_readdata()) {
    clear_has_specialData();
      ::klee::ProtoReadExpr* temp = specialData_.readdata_;
    specialData_.readdata_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::klee::ProtoReadExpr& ProtoExpr::readdata() const {
  // @@protoc_insertion_point(field_get:klee.ProtoExpr.readData)
  return has_readdata()
      ? *specialData_.readdata_
      : *reinterpret_cast< ::klee::ProtoReadExpr*>(&::klee::_ProtoReadExpr_default_instance_);
}
inline ::klee::ProtoReadExpr* ProtoExpr::mutable_readdata() {
  if (!has_readdata()) {
    clear_specialData();
    set_has_readdata();
    specialData_.readdata_ = ::google::protobuf::Arena::Create< ::klee::ProtoReadExpr >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:klee.ProtoExpr.readData)
  return specialData_.readdata_;
}

// optional .klee.ProtoExtractExpr extractData = 9;
inline bool ProtoExpr::has_extractdata() const {
  return specialData_case() == kExtractData;
}
inline void ProtoExpr::set_has_extractdata() {
  _oneof_case_[0] = kExtractData;
}
inline void ProtoExpr::clear_extractdata() {
  if (has_extractdata()) {
    delete specialData_.extractdata_;
    clear_has_specialData();
  }
}
inline ::klee::ProtoExtractExpr* ProtoExpr::release_extractdata() {
  // @@protoc_insertion_point(field_release:klee.ProtoExpr.extractData)
  if (has_extractdata()) {
    clear_has_specialData();
      ::klee::ProtoExtractExpr* temp = specialData_.extractdata_;
    specialData_.extractdata_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::klee::ProtoExtractExpr& ProtoExpr::extractdata() const {
  // @@protoc_insertion_point(field_get:klee.ProtoExpr.extractData)
  return has_extractdata()
      ? *specialData_.extractdata_
      : *reinterpret_cast< ::klee::ProtoExtractExpr*>(&::klee::_ProtoExtractExpr_default_instance_);
}
inline ::klee::ProtoExtractExpr* ProtoExpr::mutable_extractdata() {
  if (!has_extractdata()) {
    clear_specialData();
    set_has_extractdata();
    specialData_.extractdata_ = ::google::protobuf::Arena::Create< ::klee::ProtoExtractExpr >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:klee.ProtoExpr.extractData)
  return specialData_.extractdata_;
}

// optional .klee.ProtoNotOptimizedExpr NOData = 10;
inline bool ProtoExpr::has_nodata() const {
  return specialData_case() == kNOData;
}
inline void ProtoExpr::set_has_nodata() {
  _oneof_case_[0] = kNOData;
}
inline void ProtoExpr::clear_nodata() {
  if (has_nodata()) {
    delete specialData_.nodata_;
    clear_has_specialData();
  }
}
inline ::klee::ProtoNotOptimizedExpr* ProtoExpr::release_nodata() {
  // @@protoc_insertion_point(field_release:klee.ProtoExpr.NOData)
  if (has_nodata()) {
    clear_has_specialData();
      ::klee::ProtoNotOptimizedExpr* temp = specialData_.nodata_;
    specialData_.nodata_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::klee::ProtoNotOptimizedExpr& ProtoExpr::nodata() const {
  // @@protoc_insertion_point(field_get:klee.ProtoExpr.NOData)
  return has_nodata()
      ? *specialData_.nodata_
      : *reinterpret_cast< ::klee::ProtoNotOptimizedExpr*>(&::klee::_ProtoNotOptimizedExpr_default_instance_);
}
inline ::klee::ProtoNotOptimizedExpr* ProtoExpr::mutable_nodata() {
  if (!has_nodata()) {
    clear_specialData();
    set_has_nodata();
    specialData_.nodata_ = ::google::protobuf::Arena::Create< ::klee::ProtoNotOptimizedExpr >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:klee.ProtoExpr.NOData)
  return specialData_.nodata_;
}

inline bool ProtoExpr::has_specialData() const {
  return specialData_case() != SPECIALDATA_NOT_SET;
}
inline void ProtoExpr::clear_has_specialData() {
  _oneof_case_[0] = SPECIALDATA_NOT_SET;
}
inline ProtoExpr::SpecialDataCase ProtoExpr::specialData_case() const {
  return ProtoExpr::SpecialDataCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// ProtoCacheElem

// repeated .klee.ProtoExpr key = 1;
inline int ProtoCacheElem::key_size() const {
  return key_.size();
}
inline void ProtoCacheElem::clear_key() {
  key_.Clear();
}
inline ::klee::ProtoExpr* ProtoCacheElem::mutable_key(int index) {
  // @@protoc_insertion_point(field_mutable:klee.ProtoCacheElem.key)
  return key_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::klee::ProtoExpr >*
ProtoCacheElem::mutable_key() {
  // @@protoc_insertion_point(field_mutable_list:klee.ProtoCacheElem.key)
  return &key_;
}
inline const ::klee::ProtoExpr& ProtoCacheElem::key(int index) const {
  // @@protoc_insertion_point(field_get:klee.ProtoCacheElem.key)
  return key_.Get(index);
}
inline ::klee::ProtoExpr* ProtoCacheElem::add_key() {
  // @@protoc_insertion_point(field_add:klee.ProtoCacheElem.key)
  return key_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::klee::ProtoExpr >&
ProtoCacheElem::key() const {
  // @@protoc_insertion_point(field_list:klee.ProtoCacheElem.key)
  return key_;
}

// optional .klee.ProtoAssignment assignment = 2;
inline bool ProtoCacheElem::has_assignment() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoCacheElem::set_has_assignment() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoCacheElem::clear_has_assignment() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoCacheElem::clear_assignment() {
  if (assignment_ != NULL) assignment_->Clear();
  clear_has_assignment();
}
inline const ::klee::ProtoAssignment& ProtoCacheElem::assignment() const {
  const ::klee::ProtoAssignment* p = assignment_;
  // @@protoc_insertion_point(field_get:klee.ProtoCacheElem.assignment)
  return p != NULL ? *p : *reinterpret_cast<const ::klee::ProtoAssignment*>(
      &::klee::_ProtoAssignment_default_instance_);
}
inline ::klee::ProtoAssignment* ProtoCacheElem::release_assignment() {
  // @@protoc_insertion_point(field_release:klee.ProtoCacheElem.assignment)
  clear_has_assignment();
  ::klee::ProtoAssignment* temp = assignment_;
  assignment_ = NULL;
  return temp;
}
inline ::klee::ProtoAssignment* ProtoCacheElem::mutable_assignment() {
  set_has_assignment();
  if (assignment_ == NULL) {
    assignment_ = ::google::protobuf::Arena::Create< ::klee::ProtoAssignment >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:klee.ProtoCacheElem.assignment)
  return assignment_;
}
inline void ProtoCacheElem::set_allocated_assignment(::klee::ProtoAssignment* assignment) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete assignment_;
  }
  if (assignment) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      assignment = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, assignment, submessage_arena);
    }
    set_has_assignment();
  } else {
    clear_has_assignment();
  }
  assignment_ = assignment;
  // @@protoc_insertion_point(field_set_allocated:klee.ProtoCacheElem.assignment)
}

// -------------------------------------------------------------------

// ProtoCache

// repeated .klee.ProtoCacheElem elem = 1;
inline int ProtoCache::elem_size() const {
  return elem_.size();
}
inline void ProtoCache::clear_elem() {
  elem_.Clear();
}
inline ::klee::ProtoCacheElem* ProtoCache::mutable_elem(int index) {
  // @@protoc_insertion_point(field_mutable:klee.ProtoCache.elem)
  return elem_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::klee::ProtoCacheElem >*
ProtoCache::mutable_elem() {
  // @@protoc_insertion_point(field_mutable_list:klee.ProtoCache.elem)
  return &elem_;
}
inline const ::klee::ProtoCacheElem& ProtoCache::elem(int index) const {
  // @@protoc_insertion_point(field_get:klee.ProtoCache.elem)
  return elem_.Get(index);
}
inline ::klee::ProtoCacheElem* ProtoCache::add_elem() {
  // @@protoc_insertion_point(field_add:klee.ProtoCache.elem)
  return elem_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::klee::ProtoCacheElem >&
ProtoCache::elem() const {
  // @@protoc_insertion_point(field_list:klee.ProtoCache.elem)
  return elem_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace klee

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Cache_2eproto_INCLUDED
